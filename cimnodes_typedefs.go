// Code generated by cmd/codegen from https://github.com/AllenDang/cimgui-go.
// DO NOT EDIT.

package imgui

// #include <stdlib.h>
// #include <memory.h>
// #include "extra_types.h"
// #include "cimnodes_wrapper.h"
import "C"
import "unsafe"

type NodesContext C.ImNodesContext

func (self NodesContext) handle() (result *C.ImNodesContext, fin func()) {
	result = (*C.ImNodesContext)(unsafe.Pointer(&self))
	return result, func() {}
}

func (self NodesContext) c() (C.ImNodesContext, func()) {
	result, fin := self.handle()
	return *result, fin
}

func newImNodesContextFromC(cvalue *C.ImNodesContext) *NodesContext {
	return (*NodesContext)(cvalue)
}

type NodesEditorContext C.ImNodesEditorContext

func (self NodesEditorContext) handle() (result *C.ImNodesEditorContext, fin func()) {
	result = (*C.ImNodesEditorContext)(unsafe.Pointer(&self))
	return result, func() {}
}

func (self NodesEditorContext) c() (C.ImNodesEditorContext, func()) {
	result, fin := self.handle()
	return *result, fin
}

func newImNodesEditorContextFromC(cvalue *C.ImNodesEditorContext) *NodesEditorContext {
	return (*NodesEditorContext)(cvalue)
}

type NodesMiniMapNodeHoveringCallbackUserData unsafe.Pointer

func (self NodesMiniMapNodeHoveringCallbackUserData) handle() (result *unsafe.Pointer, fin func()) {
	selfArg, selfFin := WrapVoidPtr(self)
	return selfArg, func() { selfFin() }
}

func (self NodesMiniMapNodeHoveringCallbackUserData) c() (unsafe.Pointer, func()) {
	result, fin := self.handle()
	return *result, fin
}

func newNodesMiniMapNodeHoveringCallbackUserDataFromC(cvalue unsafe.Pointer) {
	return unsafe.Pointer(cvalue)
}
