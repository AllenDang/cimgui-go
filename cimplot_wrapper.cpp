// Code generated by cmd/codegen from https://github.com/AllenDang/cimgui-go.
// DO NOT EDIT.

#include "cimplot_wrapper.h"
#include "cimgui/cimplot.h"

void wrap_ImPlotAnnotationCollection_Append(ImPlotAnnotationCollection* self,const ImVec2 pos,const ImVec2 off,ImU32 bg,ImU32 fg,bool clamp,const char* fmt) { ImPlotAnnotationCollection_Append(self,pos,off,bg,fg,clamp,fmt); }
void wrap_ImPlotTagCollection_Append(ImPlotTagCollection* self,ImAxis axis,double value,ImU32 bg,ImU32 fg,const char* fmt) { ImPlotTagCollection_Append(self,axis,value,bg,fg,fmt); }
ImPlotTick* wrap_ImPlotTicker_AddTick_doublePlotFormatter(ImPlotTicker* self,double value,bool major,int level,bool show_label,ImPlotFormatter formatter,uintptr_t data) { return ImPlotTicker_AddTick_doublePlotFormatter(self,value,major,level,show_label,formatter,(void*)(uintptr_t)data); }
void wrap_ImPlot_AddTextCenteredV(ImDrawList* DrawList,ImVec2 top_center,ImU32 col,const char* text_begin) { ImPlot_AddTextCentered(DrawList,top_center,col,text_begin,0); }
void wrap_ImPlot_AddTextVerticalV(ImDrawList* DrawList,ImVec2 pos,ImU32 col,const char* text_begin) { ImPlot_AddTextVertical(DrawList,pos,col,text_begin,0); }
void wrap_ImPlot_Annotation_Str(double x,double y,const ImVec4 col,const ImVec2 pix_offset,bool clamp,const char* fmt) { ImPlot_Annotation_Str(x,y,col,pix_offset,clamp,fmt); }
int wrap_ImPlot_Formatter_Default(double value,char* buff,int size,uintptr_t data) { return ImPlot_Formatter_Default(value,buff,size,(void*)(uintptr_t)data); }
int wrap_ImPlot_Formatter_Logit(double value,char* buff,int size,uintptr_t noname1) { return ImPlot_Formatter_Logit(value,buff,size,(void*)(uintptr_t)noname1); }
int wrap_ImPlot_Formatter_Time(double noname1,char* buff,int size,uintptr_t data) { return ImPlot_Formatter_Time(noname1,buff,size,(void*)(uintptr_t)data); }
void wrap_ImPlot_Locator_Default(ImPlotTicker* ticker,const ImPlotRange range,float pixels,bool vertical,ImPlotFormatter formatter,uintptr_t formatter_data) { ImPlot_Locator_Default(ticker,range,pixels,vertical,formatter,(void*)(uintptr_t)formatter_data); }
void wrap_ImPlot_Locator_Log10(ImPlotTicker* ticker,const ImPlotRange range,float pixels,bool vertical,ImPlotFormatter formatter,uintptr_t formatter_data) { ImPlot_Locator_Log10(ticker,range,pixels,vertical,formatter,(void*)(uintptr_t)formatter_data); }
void wrap_ImPlot_Locator_SymLog(ImPlotTicker* ticker,const ImPlotRange range,float pixels,bool vertical,ImPlotFormatter formatter,uintptr_t formatter_data) { ImPlot_Locator_SymLog(ticker,range,pixels,vertical,formatter,(void*)(uintptr_t)formatter_data); }
void wrap_ImPlot_Locator_Time(ImPlotTicker* ticker,const ImPlotRange range,float pixels,bool vertical,ImPlotFormatter formatter,uintptr_t formatter_data) { ImPlot_Locator_Time(ticker,range,pixels,vertical,formatter,(void*)(uintptr_t)formatter_data); }
void wrap_ImPlot_PlotBarsGV(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count,double bar_size,ImPlotBarsFlags flags) { ImPlot_PlotBarsG(label_id,getter,(void*)(uintptr_t)data,count,bar_size,flags); }
void wrap_ImPlot_PlotDigitalGV(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count,ImPlotDigitalFlags flags) { ImPlot_PlotDigitalG(label_id,getter,(void*)(uintptr_t)data,count,flags); }
void wrap_ImPlot_PlotLineGV(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count,ImPlotLineFlags flags) { ImPlot_PlotLineG(label_id,getter,(void*)(uintptr_t)data,count,flags); }
void wrap_ImPlot_PlotPieChart_FloatPtrPlotFormatterV(const char* const label_ids[],const float* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_FloatPtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_S16PtrPlotFormatterV(const char* const label_ids[],const ImS16* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_S16PtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_S32PtrPlotFormatterV(const char* const label_ids[],const ImS32* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_S32PtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_S64PtrPlotFormatterV(const char* const label_ids[],const ImS64* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_S64PtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_S8PtrPlotFormatterV(const char* const label_ids[],const ImS8* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_S8PtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_U16PtrPlotFormatterV(const char* const label_ids[],const ImU16* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_U16PtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_U32PtrPlotFormatterV(const char* const label_ids[],const ImU32* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_U32PtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_U64PtrPlotFormatterV(const char* const label_ids[],const ImU64* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_U64PtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_U8PtrPlotFormatterV(const char* const label_ids[],const ImU8* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_U8PtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotPieChart_doublePtrPlotFormatterV(const char* const label_ids[],const double* values,int count,double x,double y,double radius,ImPlotFormatter fmt,uintptr_t fmt_data,double angle0,ImPlotPieChartFlags flags) { ImPlot_PlotPieChart_doublePtrPlotFormatter(label_ids,values,count,x,y,radius,fmt,(void*)(uintptr_t)fmt_data,angle0,flags); }
void wrap_ImPlot_PlotScatterGV(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count,ImPlotScatterFlags flags) { ImPlot_PlotScatterG(label_id,getter,(void*)(uintptr_t)data,count,flags); }
void wrap_ImPlot_PlotShadedGV(const char* label_id,ImPlotPoint_getter getter1,uintptr_t data1,ImPlotPoint_getter getter2,uintptr_t data2,int count,ImPlotShadedFlags flags) { ImPlot_PlotShadedG(label_id,getter1,(void*)(uintptr_t)data1,getter2,(void*)(uintptr_t)data2,count,flags); }
void wrap_ImPlot_PlotStairsGV(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count,ImPlotStairsFlags flags) { ImPlot_PlotStairsG(label_id,getter,(void*)(uintptr_t)data,count,flags); }
void wrap_ImPlot_SetupAxisFormat_PlotFormatterV(ImAxis axis,ImPlotFormatter formatter,uintptr_t data) { ImPlot_SetupAxisFormat_PlotFormatter(axis,formatter,(void*)(uintptr_t)data); }
void wrap_ImPlot_SetupAxisScale_PlotTransformV(ImAxis axis,ImPlotTransform forward,ImPlotTransform inverse,uintptr_t data) { ImPlot_SetupAxisScale_PlotTransform(axis,forward,inverse,(void*)(uintptr_t)data); }
void wrap_ImPlot_TagX_Str(double x,const ImVec4 col,const char* fmt) { ImPlot_TagX_Str(x,col,fmt); }
void wrap_ImPlot_TagY_Str(double y,const ImVec4 col,const char* fmt) { ImPlot_TagY_Str(y,col,fmt); }
double wrap_ImPlot_TransformForward_Log10(double v,uintptr_t noname1) { return ImPlot_TransformForward_Log10(v,(void*)(uintptr_t)noname1); }
double wrap_ImPlot_TransformForward_Logit(double v,uintptr_t noname1) { return ImPlot_TransformForward_Logit(v,(void*)(uintptr_t)noname1); }
double wrap_ImPlot_TransformForward_SymLog(double v,uintptr_t noname1) { return ImPlot_TransformForward_SymLog(v,(void*)(uintptr_t)noname1); }
double wrap_ImPlot_TransformInverse_Log10(double v,uintptr_t noname1) { return ImPlot_TransformInverse_Log10(v,(void*)(uintptr_t)noname1); }
double wrap_ImPlot_TransformInverse_Logit(double v,uintptr_t noname1) { return ImPlot_TransformInverse_Logit(v,(void*)(uintptr_t)noname1); }
double wrap_ImPlot_TransformInverse_SymLog(double v,uintptr_t noname1) { return ImPlot_TransformInverse_SymLog(v,(void*)(uintptr_t)noname1); }
bool wrap_ImPlotAxis_SetMax(ImPlotAxis* self,double _max) { return ImPlotAxis_SetMax(self,_max,false); }
bool wrap_ImPlotAxis_SetMin(ImPlotAxis* self,double _min) { return ImPlotAxis_SetMin(self,_min,false); }
ImPlotColormap wrap_ImPlot_AddColormap_U32Ptr(const char* name,const ImU32* cols,int size) { return ImPlot_AddColormap_U32Ptr(name,cols,size,true); }
ImPlotColormap wrap_ImPlot_AddColormap_Vec4Ptr(const char* name,const ImVec4* cols,int size) { return ImPlot_AddColormap_Vec4Ptr(name,cols,size,true); }
void wrap_ImPlot_AddTextCentered(ImDrawList* DrawList,ImVec2 top_center,ImU32 col,const char* text_begin) { wrap_ImPlot_AddTextCenteredV(DrawList,top_center,col,text_begin); }
void wrap_ImPlot_AddTextVertical(ImDrawList* DrawList,ImVec2 pos,ImU32 col,const char* text_begin) { wrap_ImPlot_AddTextVerticalV(DrawList,pos,col,text_begin); }
void wrap_ImPlot_Annotation_Bool(double x,double y,const ImVec4 col,const ImVec2 pix_offset,bool clamp) { ImPlot_Annotation_Bool(x,y,col,pix_offset,clamp,false); }
bool wrap_ImPlot_BeginAlignedPlots(const char* group_id) { return ImPlot_BeginAlignedPlots(group_id,true); }
bool wrap_ImPlot_BeginDragDropSourceAxis(ImAxis axis) { return ImPlot_BeginDragDropSourceAxis(axis,0); }
bool wrap_ImPlot_BeginDragDropSourceItem(const char* label_id) { return ImPlot_BeginDragDropSourceItem(label_id,0); }
bool wrap_ImPlot_BeginDragDropSourcePlot() { return ImPlot_BeginDragDropSourcePlot(0); }
bool wrap_ImPlot_BeginItem(const char* label_id) { return ImPlot_BeginItem(label_id,0,-1); }
bool wrap_ImPlot_BeginLegendPopup(const char* label_id) { return ImPlot_BeginLegendPopup(label_id,1); }
bool wrap_ImPlot_BeginPlot(const char* title_id) { return ImPlot_BeginPlot(title_id,(ImVec2){.x=-1, .y=0},0); }
bool wrap_ImPlot_BeginSubplots(const char* title_id,int rows,int cols,const ImVec2 size) { return ImPlot_BeginSubplots(title_id,rows,cols,size,0,0,0); }
void wrap_ImPlot_BustColorCache() { ImPlot_BustColorCache(0); }
bool wrap_ImPlot_ColormapButton(const char* label) { return ImPlot_ColormapButton(label,(ImVec2){.x=0, .y=0},-1); }
void wrap_ImPlot_ColormapScale(const char* label,double scale_min,double scale_max) { ImPlot_ColormapScale(label,scale_min,scale_max,(ImVec2){.x=0, .y=0},"%g",0,-1); }
bool wrap_ImPlot_ColormapSlider(const char* label,float* t) { return ImPlot_ColormapSlider(label,t,0,"",-1); }
void wrap_ImPlot_DestroyContext() { ImPlot_DestroyContext(0); }
bool wrap_ImPlot_DragLineX(int id,double* x,const ImVec4 col) { return ImPlot_DragLineX(id,x,col,1,0,0,0,0); }
bool wrap_ImPlot_DragLineY(int id,double* y,const ImVec4 col) { return ImPlot_DragLineY(id,y,col,1,0,0,0,0); }
bool wrap_ImPlot_DragPoint(int id,double* x,double* y,const ImVec4 col) { return ImPlot_DragPoint(id,x,y,col,4,0,0,0,0); }
bool wrap_ImPlot_DragRect(int id,double* x1,double* y1,double* x2,double* y2,const ImVec4 col) { return ImPlot_DragRect(id,x1,y1,x2,y2,col,0,0,0,0); }
void wrap_ImPlot_GetColormapColor(ImVec4* pOut,int idx) { ImPlot_GetColormapColor(pOut,idx,-1); }
int wrap_ImPlot_GetColormapSize() { return ImPlot_GetColormapSize(-1); }
void wrap_ImPlot_GetLocationPos(ImVec2* pOut,const ImRect outer_rect,const ImVec2 inner_size,ImPlotLocation location) { ImPlot_GetLocationPos(pOut,outer_rect,inner_size,location,(ImVec2){.x=0, .y=0}); }
void wrap_ImPlot_GetPlotLimits(ImPlotRect* pOut) { ImPlot_GetPlotLimits(pOut,-1,-1); }
void wrap_ImPlot_GetPlotMousePos(ImPlotPoint* pOut) { ImPlot_GetPlotMousePos(pOut,-1,-1); }
void wrap_ImPlot_GetPlotSelection(ImPlotRect* pOut) { ImPlot_GetPlotSelection(pOut,-1,-1); }
void wrap_ImPlot_HideNextItem() { ImPlot_HideNextItem(true,ImPlotCond_Once); }
bool wrap_ImPlot_ImAlmostEqual(double v1,double v2) { return ImPlot_ImAlmostEqual(v1,v2,2); }
void wrap_ImPlot_LabelAxisValue(const ImPlotAxis axis,double value,char* buff,int size) { ImPlot_LabelAxisValue(axis,value,buff,size,false); }
void wrap_ImPlot_MakeTime(ImPlotTime* pOut,int year) { ImPlot_MakeTime(pOut,year,0,1,0,0,0,0); }
void wrap_ImPlot_MapInputDefault() { ImPlot_MapInputDefault(0); }
void wrap_ImPlot_MapInputReverse() { ImPlot_MapInputReverse(0); }
void wrap_ImPlot_PixelsToPlot_Float(ImPlotPoint* pOut,float x,float y) { ImPlot_PixelsToPlot_Float(pOut,x,y,-1,-1); }
void wrap_ImPlot_PixelsToPlot_Vec2(ImPlotPoint* pOut,const ImVec2 pix) { ImPlot_PixelsToPlot_Vec2(pOut,pix,-1,-1); }
void wrap_ImPlot_PlotBarGroups_FloatPtr(const char* const label_ids[],const float* values,int item_count,int group_count) { ImPlot_PlotBarGroups_FloatPtr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_S16Ptr(const char* const label_ids[],const ImS16* values,int item_count,int group_count) { ImPlot_PlotBarGroups_S16Ptr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_S32Ptr(const char* const label_ids[],const ImS32* values,int item_count,int group_count) { ImPlot_PlotBarGroups_S32Ptr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_S64Ptr(const char* const label_ids[],const ImS64* values,int item_count,int group_count) { ImPlot_PlotBarGroups_S64Ptr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_S8Ptr(const char* const label_ids[],const ImS8* values,int item_count,int group_count) { ImPlot_PlotBarGroups_S8Ptr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_U16Ptr(const char* const label_ids[],const ImU16* values,int item_count,int group_count) { ImPlot_PlotBarGroups_U16Ptr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_U32Ptr(const char* const label_ids[],const ImU32* values,int item_count,int group_count) { ImPlot_PlotBarGroups_U32Ptr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_U64Ptr(const char* const label_ids[],const ImU64* values,int item_count,int group_count) { ImPlot_PlotBarGroups_U64Ptr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_U8Ptr(const char* const label_ids[],const ImU8* values,int item_count,int group_count) { ImPlot_PlotBarGroups_U8Ptr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarGroups_doublePtr(const char* const label_ids[],const double* values,int item_count,int group_count) { ImPlot_PlotBarGroups_doublePtr(label_ids,values,item_count,group_count,0.67,0,0); }
void wrap_ImPlot_PlotBarsG(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count,double bar_size) { wrap_ImPlot_PlotBarsGV(label_id,getter,data,count,bar_size,0); }
void wrap_ImPlot_PlotBars_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count,double bar_size) { ImPlot_PlotBars_FloatPtrFloatPtr(label_id,xs,ys,count,bar_size,0,0,sizeof(float)); }
void wrap_ImPlot_PlotBars_FloatPtrInt(const char* label_id,const float* values,int count) { ImPlot_PlotBars_FloatPtrInt(label_id,values,count,0.67,0,0,0,sizeof(float)); }
void wrap_ImPlot_PlotBars_S16PtrInt(const char* label_id,const ImS16* values,int count) { ImPlot_PlotBars_S16PtrInt(label_id,values,count,0.67,0,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotBars_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double bar_size) { ImPlot_PlotBars_S16PtrS16Ptr(label_id,xs,ys,count,bar_size,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotBars_S32PtrInt(const char* label_id,const ImS32* values,int count) { ImPlot_PlotBars_S32PtrInt(label_id,values,count,0.67,0,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotBars_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double bar_size) { ImPlot_PlotBars_S32PtrS32Ptr(label_id,xs,ys,count,bar_size,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotBars_S64PtrInt(const char* label_id,const ImS64* values,int count) { ImPlot_PlotBars_S64PtrInt(label_id,values,count,0.67,0,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotBars_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double bar_size) { ImPlot_PlotBars_S64PtrS64Ptr(label_id,xs,ys,count,bar_size,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotBars_S8PtrInt(const char* label_id,const ImS8* values,int count) { ImPlot_PlotBars_S8PtrInt(label_id,values,count,0.67,0,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotBars_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double bar_size) { ImPlot_PlotBars_S8PtrS8Ptr(label_id,xs,ys,count,bar_size,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotBars_U16PtrInt(const char* label_id,const ImU16* values,int count) { ImPlot_PlotBars_U16PtrInt(label_id,values,count,0.67,0,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotBars_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double bar_size) { ImPlot_PlotBars_U16PtrU16Ptr(label_id,xs,ys,count,bar_size,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotBars_U32PtrInt(const char* label_id,const ImU32* values,int count) { ImPlot_PlotBars_U32PtrInt(label_id,values,count,0.67,0,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotBars_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double bar_size) { ImPlot_PlotBars_U32PtrU32Ptr(label_id,xs,ys,count,bar_size,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotBars_U64PtrInt(const char* label_id,const ImU64* values,int count) { ImPlot_PlotBars_U64PtrInt(label_id,values,count,0.67,0,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotBars_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double bar_size) { ImPlot_PlotBars_U64PtrU64Ptr(label_id,xs,ys,count,bar_size,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotBars_U8PtrInt(const char* label_id,const ImU8* values,int count) { ImPlot_PlotBars_U8PtrInt(label_id,values,count,0.67,0,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotBars_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double bar_size) { ImPlot_PlotBars_U8PtrU8Ptr(label_id,xs,ys,count,bar_size,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotBars_doublePtrInt(const char* label_id,const double* values,int count) { ImPlot_PlotBars_doublePtrInt(label_id,values,count,0.67,0,0,0,sizeof(double)); }
void wrap_ImPlot_PlotBars_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count,double bar_size) { ImPlot_PlotBars_doublePtrdoublePtr(label_id,xs,ys,count,bar_size,0,0,sizeof(double)); }
void wrap_ImPlot_PlotDigitalG(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count) { wrap_ImPlot_PlotDigitalGV(label_id,getter,data,count,0); }
void wrap_ImPlot_PlotDigital_FloatPtr(const char* label_id,const float* xs,const float* ys,int count) { ImPlot_PlotDigital_FloatPtr(label_id,xs,ys,count,0,0,sizeof(float)); }
void wrap_ImPlot_PlotDigital_S16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count) { ImPlot_PlotDigital_S16Ptr(label_id,xs,ys,count,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotDigital_S32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count) { ImPlot_PlotDigital_S32Ptr(label_id,xs,ys,count,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotDigital_S64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count) { ImPlot_PlotDigital_S64Ptr(label_id,xs,ys,count,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotDigital_S8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count) { ImPlot_PlotDigital_S8Ptr(label_id,xs,ys,count,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotDigital_U16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count) { ImPlot_PlotDigital_U16Ptr(label_id,xs,ys,count,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotDigital_U32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count) { ImPlot_PlotDigital_U32Ptr(label_id,xs,ys,count,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotDigital_U64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count) { ImPlot_PlotDigital_U64Ptr(label_id,xs,ys,count,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotDigital_U8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count) { ImPlot_PlotDigital_U8Ptr(label_id,xs,ys,count,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotDigital_doublePtr(const char* label_id,const double* xs,const double* ys,int count) { ImPlot_PlotDigital_doublePtr(label_id,xs,ys,count,0,0,sizeof(double)); }
void wrap_ImPlot_PlotDummy(const char* label_id) { ImPlot_PlotDummy(label_id,0); }
void wrap_ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,const float* neg,const float* pos,int count) { ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtr(label_id,xs,ys,neg,pos,count,0,0,sizeof(float)); }
void wrap_ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrInt(const char* label_id,const float* xs,const float* ys,const float* err,int count) { ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrInt(label_id,xs,ys,err,count,0,0,sizeof(float)); }
void wrap_ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrInt(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* err,int count) { ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrInt(label_id,xs,ys,err,count,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* neg,const ImS16* pos,int count) { ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrS16Ptr(label_id,xs,ys,neg,pos,count,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrInt(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* err,int count) { ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrInt(label_id,xs,ys,err,count,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* neg,const ImS32* pos,int count) { ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrS32Ptr(label_id,xs,ys,neg,pos,count,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrInt(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* err,int count) { ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrInt(label_id,xs,ys,err,count,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* neg,const ImS64* pos,int count) { ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrS64Ptr(label_id,xs,ys,neg,pos,count,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrInt(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* err,int count) { ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrInt(label_id,xs,ys,err,count,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* neg,const ImS8* pos,int count) { ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrS8Ptr(label_id,xs,ys,neg,pos,count,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrInt(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* err,int count) { ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrInt(label_id,xs,ys,err,count,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* neg,const ImU16* pos,int count) { ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrU16Ptr(label_id,xs,ys,neg,pos,count,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrInt(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* err,int count) { ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrInt(label_id,xs,ys,err,count,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* neg,const ImU32* pos,int count) { ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrU32Ptr(label_id,xs,ys,neg,pos,count,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrInt(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* err,int count) { ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrInt(label_id,xs,ys,err,count,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* neg,const ImU64* pos,int count) { ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrU64Ptr(label_id,xs,ys,neg,pos,count,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrInt(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* err,int count) { ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrInt(label_id,xs,ys,err,count,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* neg,const ImU8* pos,int count) { ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrU8Ptr(label_id,xs,ys,neg,pos,count,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrInt(const char* label_id,const double* xs,const double* ys,const double* err,int count) { ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrInt(label_id,xs,ys,err,count,0,0,sizeof(double)); }
void wrap_ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,const double* neg,const double* pos,int count) { ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtr(label_id,xs,ys,neg,pos,count,0,0,sizeof(double)); }
void wrap_ImPlot_PlotHeatmap_FloatPtr(const char* label_id,const float* values,int rows,int cols) { ImPlot_PlotHeatmap_FloatPtr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_S16Ptr(const char* label_id,const ImS16* values,int rows,int cols) { ImPlot_PlotHeatmap_S16Ptr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_S32Ptr(const char* label_id,const ImS32* values,int rows,int cols) { ImPlot_PlotHeatmap_S32Ptr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_S64Ptr(const char* label_id,const ImS64* values,int rows,int cols) { ImPlot_PlotHeatmap_S64Ptr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_S8Ptr(const char* label_id,const ImS8* values,int rows,int cols) { ImPlot_PlotHeatmap_S8Ptr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_U16Ptr(const char* label_id,const ImU16* values,int rows,int cols) { ImPlot_PlotHeatmap_U16Ptr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_U32Ptr(const char* label_id,const ImU32* values,int rows,int cols) { ImPlot_PlotHeatmap_U32Ptr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_U64Ptr(const char* label_id,const ImU64* values,int rows,int cols) { ImPlot_PlotHeatmap_U64Ptr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_U8Ptr(const char* label_id,const ImU8* values,int rows,int cols) { ImPlot_PlotHeatmap_U8Ptr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
void wrap_ImPlot_PlotHeatmap_doublePtr(const char* label_id,const double* values,int rows,int cols) { ImPlot_PlotHeatmap_doublePtr(label_id,values,rows,cols,0,0,"%.1f",(ImPlotPoint){.x=0, .y=0},(ImPlotPoint){.x=1, .y=1},0); }
double wrap_ImPlot_PlotHistogram2D_FloatPtr(const char* label_id,const float* xs,const float* ys,int count) { return ImPlot_PlotHistogram2D_FloatPtr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_S16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count) { return ImPlot_PlotHistogram2D_S16Ptr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_S32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count) { return ImPlot_PlotHistogram2D_S32Ptr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_S64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count) { return ImPlot_PlotHistogram2D_S64Ptr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_S8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count) { return ImPlot_PlotHistogram2D_S8Ptr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_U16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count) { return ImPlot_PlotHistogram2D_U16Ptr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_U32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count) { return ImPlot_PlotHistogram2D_U32Ptr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_U64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count) { return ImPlot_PlotHistogram2D_U64Ptr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_U8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count) { return ImPlot_PlotHistogram2D_U8Ptr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram2D_doublePtr(const char* label_id,const double* xs,const double* ys,int count) { return ImPlot_PlotHistogram2D_doublePtr(label_id,xs,ys,count,ImPlotBin_Sturges,ImPlotBin_Sturges,ImPlotRect(),0); }
double wrap_ImPlot_PlotHistogram_FloatPtr(const char* label_id,const float* values,int count) { return ImPlot_PlotHistogram_FloatPtr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_S16Ptr(const char* label_id,const ImS16* values,int count) { return ImPlot_PlotHistogram_S16Ptr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_S32Ptr(const char* label_id,const ImS32* values,int count) { return ImPlot_PlotHistogram_S32Ptr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_S64Ptr(const char* label_id,const ImS64* values,int count) { return ImPlot_PlotHistogram_S64Ptr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_S8Ptr(const char* label_id,const ImS8* values,int count) { return ImPlot_PlotHistogram_S8Ptr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_U16Ptr(const char* label_id,const ImU16* values,int count) { return ImPlot_PlotHistogram_U16Ptr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_U32Ptr(const char* label_id,const ImU32* values,int count) { return ImPlot_PlotHistogram_U32Ptr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_U64Ptr(const char* label_id,const ImU64* values,int count) { return ImPlot_PlotHistogram_U64Ptr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_U8Ptr(const char* label_id,const ImU8* values,int count) { return ImPlot_PlotHistogram_U8Ptr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
double wrap_ImPlot_PlotHistogram_doublePtr(const char* label_id,const double* values,int count) { return ImPlot_PlotHistogram_doublePtr(label_id,values,count,ImPlotBin_Sturges,1.0,ImPlotRange(),0); }
void wrap_ImPlot_PlotImage(const char* label_id,ImTextureID user_texture_id,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max) { ImPlot_PlotImage(label_id,user_texture_id,bounds_min,bounds_max,(ImVec2){.x=0, .y=0},(ImVec2){.x=1, .y=1},(ImVec4){.x=1, .y=1, .z=1, .w=1},0); }
void wrap_ImPlot_PlotInfLines_FloatPtr(const char* label_id,const float* values,int count) { ImPlot_PlotInfLines_FloatPtr(label_id,values,count,0,0,sizeof(float)); }
void wrap_ImPlot_PlotInfLines_S16Ptr(const char* label_id,const ImS16* values,int count) { ImPlot_PlotInfLines_S16Ptr(label_id,values,count,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotInfLines_S32Ptr(const char* label_id,const ImS32* values,int count) { ImPlot_PlotInfLines_S32Ptr(label_id,values,count,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotInfLines_S64Ptr(const char* label_id,const ImS64* values,int count) { ImPlot_PlotInfLines_S64Ptr(label_id,values,count,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotInfLines_S8Ptr(const char* label_id,const ImS8* values,int count) { ImPlot_PlotInfLines_S8Ptr(label_id,values,count,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotInfLines_U16Ptr(const char* label_id,const ImU16* values,int count) { ImPlot_PlotInfLines_U16Ptr(label_id,values,count,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotInfLines_U32Ptr(const char* label_id,const ImU32* values,int count) { ImPlot_PlotInfLines_U32Ptr(label_id,values,count,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotInfLines_U64Ptr(const char* label_id,const ImU64* values,int count) { ImPlot_PlotInfLines_U64Ptr(label_id,values,count,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotInfLines_U8Ptr(const char* label_id,const ImU8* values,int count) { ImPlot_PlotInfLines_U8Ptr(label_id,values,count,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotInfLines_doublePtr(const char* label_id,const double* values,int count) { ImPlot_PlotInfLines_doublePtr(label_id,values,count,0,0,sizeof(double)); }
void wrap_ImPlot_PlotLineG(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count) { wrap_ImPlot_PlotLineGV(label_id,getter,data,count,0); }
void wrap_ImPlot_PlotLine_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count) { ImPlot_PlotLine_FloatPtrFloatPtr(label_id,xs,ys,count,0,0,sizeof(float)); }
void wrap_ImPlot_PlotLine_FloatPtrInt(const char* label_id,const float* values,int count) { ImPlot_PlotLine_FloatPtrInt(label_id,values,count,1,0,0,0,sizeof(float)); }
void wrap_ImPlot_PlotLine_S16PtrInt(const char* label_id,const ImS16* values,int count) { ImPlot_PlotLine_S16PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotLine_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count) { ImPlot_PlotLine_S16PtrS16Ptr(label_id,xs,ys,count,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotLine_S32PtrInt(const char* label_id,const ImS32* values,int count) { ImPlot_PlotLine_S32PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotLine_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count) { ImPlot_PlotLine_S32PtrS32Ptr(label_id,xs,ys,count,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotLine_S64PtrInt(const char* label_id,const ImS64* values,int count) { ImPlot_PlotLine_S64PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotLine_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count) { ImPlot_PlotLine_S64PtrS64Ptr(label_id,xs,ys,count,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotLine_S8PtrInt(const char* label_id,const ImS8* values,int count) { ImPlot_PlotLine_S8PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotLine_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count) { ImPlot_PlotLine_S8PtrS8Ptr(label_id,xs,ys,count,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotLine_U16PtrInt(const char* label_id,const ImU16* values,int count) { ImPlot_PlotLine_U16PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotLine_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count) { ImPlot_PlotLine_U16PtrU16Ptr(label_id,xs,ys,count,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotLine_U32PtrInt(const char* label_id,const ImU32* values,int count) { ImPlot_PlotLine_U32PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotLine_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count) { ImPlot_PlotLine_U32PtrU32Ptr(label_id,xs,ys,count,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotLine_U64PtrInt(const char* label_id,const ImU64* values,int count) { ImPlot_PlotLine_U64PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotLine_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count) { ImPlot_PlotLine_U64PtrU64Ptr(label_id,xs,ys,count,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotLine_U8PtrInt(const char* label_id,const ImU8* values,int count) { ImPlot_PlotLine_U8PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotLine_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count) { ImPlot_PlotLine_U8PtrU8Ptr(label_id,xs,ys,count,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotLine_doublePtrInt(const char* label_id,const double* values,int count) { ImPlot_PlotLine_doublePtrInt(label_id,values,count,1,0,0,0,sizeof(double)); }
void wrap_ImPlot_PlotLine_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count) { ImPlot_PlotLine_doublePtrdoublePtr(label_id,xs,ys,count,0,0,sizeof(double)); }
void wrap_ImPlot_PlotPieChart_FloatPtrPlotFormatter(const char* const label_ids[],const float* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_FloatPtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_FloatPtrStr(const char* const label_ids[],const float* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_FloatPtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_S16PtrPlotFormatter(const char* const label_ids[],const ImS16* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_S16PtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_S16PtrStr(const char* const label_ids[],const ImS16* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_S16PtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_S32PtrPlotFormatter(const char* const label_ids[],const ImS32* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_S32PtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_S32PtrStr(const char* const label_ids[],const ImS32* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_S32PtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_S64PtrPlotFormatter(const char* const label_ids[],const ImS64* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_S64PtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_S64PtrStr(const char* const label_ids[],const ImS64* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_S64PtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_S8PtrPlotFormatter(const char* const label_ids[],const ImS8* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_S8PtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_S8PtrStr(const char* const label_ids[],const ImS8* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_S8PtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_U16PtrPlotFormatter(const char* const label_ids[],const ImU16* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_U16PtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_U16PtrStr(const char* const label_ids[],const ImU16* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_U16PtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_U32PtrPlotFormatter(const char* const label_ids[],const ImU32* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_U32PtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_U32PtrStr(const char* const label_ids[],const ImU32* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_U32PtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_U64PtrPlotFormatter(const char* const label_ids[],const ImU64* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_U64PtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_U64PtrStr(const char* const label_ids[],const ImU64* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_U64PtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_U8PtrPlotFormatter(const char* const label_ids[],const ImU8* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_U8PtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_U8PtrStr(const char* const label_ids[],const ImU8* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_U8PtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotPieChart_doublePtrPlotFormatter(const char* const label_ids[],const double* values,int count,double x,double y,double radius,ImPlotFormatter fmt) { wrap_ImPlot_PlotPieChart_doublePtrPlotFormatterV(label_ids,values,count,x,y,radius,fmt,0,90,0); }
void wrap_ImPlot_PlotPieChart_doublePtrStr(const char* const label_ids[],const double* values,int count,double x,double y,double radius) { ImPlot_PlotPieChart_doublePtrStr(label_ids,values,count,x,y,radius,"%.1f",90,0); }
void wrap_ImPlot_PlotScatterG(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count) { wrap_ImPlot_PlotScatterGV(label_id,getter,data,count,0); }
void wrap_ImPlot_PlotScatter_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count) { ImPlot_PlotScatter_FloatPtrFloatPtr(label_id,xs,ys,count,0,0,sizeof(float)); }
void wrap_ImPlot_PlotScatter_FloatPtrInt(const char* label_id,const float* values,int count) { ImPlot_PlotScatter_FloatPtrInt(label_id,values,count,1,0,0,0,sizeof(float)); }
void wrap_ImPlot_PlotScatter_S16PtrInt(const char* label_id,const ImS16* values,int count) { ImPlot_PlotScatter_S16PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotScatter_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count) { ImPlot_PlotScatter_S16PtrS16Ptr(label_id,xs,ys,count,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotScatter_S32PtrInt(const char* label_id,const ImS32* values,int count) { ImPlot_PlotScatter_S32PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotScatter_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count) { ImPlot_PlotScatter_S32PtrS32Ptr(label_id,xs,ys,count,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotScatter_S64PtrInt(const char* label_id,const ImS64* values,int count) { ImPlot_PlotScatter_S64PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotScatter_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count) { ImPlot_PlotScatter_S64PtrS64Ptr(label_id,xs,ys,count,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotScatter_S8PtrInt(const char* label_id,const ImS8* values,int count) { ImPlot_PlotScatter_S8PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotScatter_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count) { ImPlot_PlotScatter_S8PtrS8Ptr(label_id,xs,ys,count,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotScatter_U16PtrInt(const char* label_id,const ImU16* values,int count) { ImPlot_PlotScatter_U16PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotScatter_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count) { ImPlot_PlotScatter_U16PtrU16Ptr(label_id,xs,ys,count,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotScatter_U32PtrInt(const char* label_id,const ImU32* values,int count) { ImPlot_PlotScatter_U32PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotScatter_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count) { ImPlot_PlotScatter_U32PtrU32Ptr(label_id,xs,ys,count,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotScatter_U64PtrInt(const char* label_id,const ImU64* values,int count) { ImPlot_PlotScatter_U64PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotScatter_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count) { ImPlot_PlotScatter_U64PtrU64Ptr(label_id,xs,ys,count,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotScatter_U8PtrInt(const char* label_id,const ImU8* values,int count) { ImPlot_PlotScatter_U8PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotScatter_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count) { ImPlot_PlotScatter_U8PtrU8Ptr(label_id,xs,ys,count,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotScatter_doublePtrInt(const char* label_id,const double* values,int count) { ImPlot_PlotScatter_doublePtrInt(label_id,values,count,1,0,0,0,sizeof(double)); }
void wrap_ImPlot_PlotScatter_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count) { ImPlot_PlotScatter_doublePtrdoublePtr(label_id,xs,ys,count,0,0,sizeof(double)); }
void wrap_ImPlot_PlotShadedG(const char* label_id,ImPlotPoint_getter getter1,uintptr_t data1,ImPlotPoint_getter getter2,uintptr_t data2,int count) { wrap_ImPlot_PlotShadedGV(label_id,getter1,data1,getter2,data2,count,0); }
void wrap_ImPlot_PlotShaded_FloatPtrFloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys1,const float* ys2,int count) { ImPlot_PlotShaded_FloatPtrFloatPtrFloatPtr(label_id,xs,ys1,ys2,count,0,0,sizeof(float)); }
void wrap_ImPlot_PlotShaded_FloatPtrFloatPtrInt(const char* label_id,const float* xs,const float* ys,int count) { ImPlot_PlotShaded_FloatPtrFloatPtrInt(label_id,xs,ys,count,0,0,0,sizeof(float)); }
void wrap_ImPlot_PlotShaded_FloatPtrInt(const char* label_id,const float* values,int count) { ImPlot_PlotShaded_FloatPtrInt(label_id,values,count,0,1,0,0,0,sizeof(float)); }
void wrap_ImPlot_PlotShaded_S16PtrInt(const char* label_id,const ImS16* values,int count) { ImPlot_PlotShaded_S16PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotShaded_S16PtrS16PtrInt(const char* label_id,const ImS16* xs,const ImS16* ys,int count) { ImPlot_PlotShaded_S16PtrS16PtrInt(label_id,xs,ys,count,0,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotShaded_S16PtrS16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys1,const ImS16* ys2,int count) { ImPlot_PlotShaded_S16PtrS16PtrS16Ptr(label_id,xs,ys1,ys2,count,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotShaded_S32PtrInt(const char* label_id,const ImS32* values,int count) { ImPlot_PlotShaded_S32PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotShaded_S32PtrS32PtrInt(const char* label_id,const ImS32* xs,const ImS32* ys,int count) { ImPlot_PlotShaded_S32PtrS32PtrInt(label_id,xs,ys,count,0,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotShaded_S32PtrS32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys1,const ImS32* ys2,int count) { ImPlot_PlotShaded_S32PtrS32PtrS32Ptr(label_id,xs,ys1,ys2,count,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotShaded_S64PtrInt(const char* label_id,const ImS64* values,int count) { ImPlot_PlotShaded_S64PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotShaded_S64PtrS64PtrInt(const char* label_id,const ImS64* xs,const ImS64* ys,int count) { ImPlot_PlotShaded_S64PtrS64PtrInt(label_id,xs,ys,count,0,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotShaded_S64PtrS64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys1,const ImS64* ys2,int count) { ImPlot_PlotShaded_S64PtrS64PtrS64Ptr(label_id,xs,ys1,ys2,count,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotShaded_S8PtrInt(const char* label_id,const ImS8* values,int count) { ImPlot_PlotShaded_S8PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotShaded_S8PtrS8PtrInt(const char* label_id,const ImS8* xs,const ImS8* ys,int count) { ImPlot_PlotShaded_S8PtrS8PtrInt(label_id,xs,ys,count,0,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotShaded_S8PtrS8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys1,const ImS8* ys2,int count) { ImPlot_PlotShaded_S8PtrS8PtrS8Ptr(label_id,xs,ys1,ys2,count,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotShaded_U16PtrInt(const char* label_id,const ImU16* values,int count) { ImPlot_PlotShaded_U16PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotShaded_U16PtrU16PtrInt(const char* label_id,const ImU16* xs,const ImU16* ys,int count) { ImPlot_PlotShaded_U16PtrU16PtrInt(label_id,xs,ys,count,0,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotShaded_U16PtrU16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys1,const ImU16* ys2,int count) { ImPlot_PlotShaded_U16PtrU16PtrU16Ptr(label_id,xs,ys1,ys2,count,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotShaded_U32PtrInt(const char* label_id,const ImU32* values,int count) { ImPlot_PlotShaded_U32PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotShaded_U32PtrU32PtrInt(const char* label_id,const ImU32* xs,const ImU32* ys,int count) { ImPlot_PlotShaded_U32PtrU32PtrInt(label_id,xs,ys,count,0,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotShaded_U32PtrU32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys1,const ImU32* ys2,int count) { ImPlot_PlotShaded_U32PtrU32PtrU32Ptr(label_id,xs,ys1,ys2,count,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotShaded_U64PtrInt(const char* label_id,const ImU64* values,int count) { ImPlot_PlotShaded_U64PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotShaded_U64PtrU64PtrInt(const char* label_id,const ImU64* xs,const ImU64* ys,int count) { ImPlot_PlotShaded_U64PtrU64PtrInt(label_id,xs,ys,count,0,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotShaded_U64PtrU64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys1,const ImU64* ys2,int count) { ImPlot_PlotShaded_U64PtrU64PtrU64Ptr(label_id,xs,ys1,ys2,count,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotShaded_U8PtrInt(const char* label_id,const ImU8* values,int count) { ImPlot_PlotShaded_U8PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotShaded_U8PtrU8PtrInt(const char* label_id,const ImU8* xs,const ImU8* ys,int count) { ImPlot_PlotShaded_U8PtrU8PtrInt(label_id,xs,ys,count,0,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotShaded_U8PtrU8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys1,const ImU8* ys2,int count) { ImPlot_PlotShaded_U8PtrU8PtrU8Ptr(label_id,xs,ys1,ys2,count,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotShaded_doublePtrInt(const char* label_id,const double* values,int count) { ImPlot_PlotShaded_doublePtrInt(label_id,values,count,0,1,0,0,0,sizeof(double)); }
void wrap_ImPlot_PlotShaded_doublePtrdoublePtrInt(const char* label_id,const double* xs,const double* ys,int count) { ImPlot_PlotShaded_doublePtrdoublePtrInt(label_id,xs,ys,count,0,0,0,sizeof(double)); }
void wrap_ImPlot_PlotShaded_doublePtrdoublePtrdoublePtr(const char* label_id,const double* xs,const double* ys1,const double* ys2,int count) { ImPlot_PlotShaded_doublePtrdoublePtrdoublePtr(label_id,xs,ys1,ys2,count,0,0,sizeof(double)); }
void wrap_ImPlot_PlotStairsG(const char* label_id,ImPlotPoint_getter getter,uintptr_t data,int count) { wrap_ImPlot_PlotStairsGV(label_id,getter,data,count,0); }
void wrap_ImPlot_PlotStairs_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count) { ImPlot_PlotStairs_FloatPtrFloatPtr(label_id,xs,ys,count,0,0,sizeof(float)); }
void wrap_ImPlot_PlotStairs_FloatPtrInt(const char* label_id,const float* values,int count) { ImPlot_PlotStairs_FloatPtrInt(label_id,values,count,1,0,0,0,sizeof(float)); }
void wrap_ImPlot_PlotStairs_S16PtrInt(const char* label_id,const ImS16* values,int count) { ImPlot_PlotStairs_S16PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotStairs_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count) { ImPlot_PlotStairs_S16PtrS16Ptr(label_id,xs,ys,count,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotStairs_S32PtrInt(const char* label_id,const ImS32* values,int count) { ImPlot_PlotStairs_S32PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotStairs_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count) { ImPlot_PlotStairs_S32PtrS32Ptr(label_id,xs,ys,count,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotStairs_S64PtrInt(const char* label_id,const ImS64* values,int count) { ImPlot_PlotStairs_S64PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotStairs_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count) { ImPlot_PlotStairs_S64PtrS64Ptr(label_id,xs,ys,count,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotStairs_S8PtrInt(const char* label_id,const ImS8* values,int count) { ImPlot_PlotStairs_S8PtrInt(label_id,values,count,1,0,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotStairs_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count) { ImPlot_PlotStairs_S8PtrS8Ptr(label_id,xs,ys,count,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotStairs_U16PtrInt(const char* label_id,const ImU16* values,int count) { ImPlot_PlotStairs_U16PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotStairs_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count) { ImPlot_PlotStairs_U16PtrU16Ptr(label_id,xs,ys,count,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotStairs_U32PtrInt(const char* label_id,const ImU32* values,int count) { ImPlot_PlotStairs_U32PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotStairs_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count) { ImPlot_PlotStairs_U32PtrU32Ptr(label_id,xs,ys,count,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotStairs_U64PtrInt(const char* label_id,const ImU64* values,int count) { ImPlot_PlotStairs_U64PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotStairs_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count) { ImPlot_PlotStairs_U64PtrU64Ptr(label_id,xs,ys,count,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotStairs_U8PtrInt(const char* label_id,const ImU8* values,int count) { ImPlot_PlotStairs_U8PtrInt(label_id,values,count,1,0,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotStairs_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count) { ImPlot_PlotStairs_U8PtrU8Ptr(label_id,xs,ys,count,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotStairs_doublePtrInt(const char* label_id,const double* values,int count) { ImPlot_PlotStairs_doublePtrInt(label_id,values,count,1,0,0,0,sizeof(double)); }
void wrap_ImPlot_PlotStairs_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count) { ImPlot_PlotStairs_doublePtrdoublePtr(label_id,xs,ys,count,0,0,sizeof(double)); }
void wrap_ImPlot_PlotStems_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count) { ImPlot_PlotStems_FloatPtrFloatPtr(label_id,xs,ys,count,0,0,0,sizeof(float)); }
void wrap_ImPlot_PlotStems_FloatPtrInt(const char* label_id,const float* values,int count) { ImPlot_PlotStems_FloatPtrInt(label_id,values,count,0,1,0,0,0,sizeof(float)); }
void wrap_ImPlot_PlotStems_S16PtrInt(const char* label_id,const ImS16* values,int count) { ImPlot_PlotStems_S16PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotStems_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count) { ImPlot_PlotStems_S16PtrS16Ptr(label_id,xs,ys,count,0,0,0,sizeof(ImS16)); }
void wrap_ImPlot_PlotStems_S32PtrInt(const char* label_id,const ImS32* values,int count) { ImPlot_PlotStems_S32PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotStems_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count) { ImPlot_PlotStems_S32PtrS32Ptr(label_id,xs,ys,count,0,0,0,sizeof(ImS32)); }
void wrap_ImPlot_PlotStems_S64PtrInt(const char* label_id,const ImS64* values,int count) { ImPlot_PlotStems_S64PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotStems_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count) { ImPlot_PlotStems_S64PtrS64Ptr(label_id,xs,ys,count,0,0,0,sizeof(ImS64)); }
void wrap_ImPlot_PlotStems_S8PtrInt(const char* label_id,const ImS8* values,int count) { ImPlot_PlotStems_S8PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotStems_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count) { ImPlot_PlotStems_S8PtrS8Ptr(label_id,xs,ys,count,0,0,0,sizeof(ImS8)); }
void wrap_ImPlot_PlotStems_U16PtrInt(const char* label_id,const ImU16* values,int count) { ImPlot_PlotStems_U16PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotStems_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count) { ImPlot_PlotStems_U16PtrU16Ptr(label_id,xs,ys,count,0,0,0,sizeof(ImU16)); }
void wrap_ImPlot_PlotStems_U32PtrInt(const char* label_id,const ImU32* values,int count) { ImPlot_PlotStems_U32PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotStems_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count) { ImPlot_PlotStems_U32PtrU32Ptr(label_id,xs,ys,count,0,0,0,sizeof(ImU32)); }
void wrap_ImPlot_PlotStems_U64PtrInt(const char* label_id,const ImU64* values,int count) { ImPlot_PlotStems_U64PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotStems_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count) { ImPlot_PlotStems_U64PtrU64Ptr(label_id,xs,ys,count,0,0,0,sizeof(ImU64)); }
void wrap_ImPlot_PlotStems_U8PtrInt(const char* label_id,const ImU8* values,int count) { ImPlot_PlotStems_U8PtrInt(label_id,values,count,0,1,0,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotStems_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count) { ImPlot_PlotStems_U8PtrU8Ptr(label_id,xs,ys,count,0,0,0,sizeof(ImU8)); }
void wrap_ImPlot_PlotStems_doublePtrInt(const char* label_id,const double* values,int count) { ImPlot_PlotStems_doublePtrInt(label_id,values,count,0,1,0,0,0,sizeof(double)); }
void wrap_ImPlot_PlotStems_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count) { ImPlot_PlotStems_doublePtrdoublePtr(label_id,xs,ys,count,0,0,0,sizeof(double)); }
void wrap_ImPlot_PlotText(const char* text,double x,double y) { ImPlot_PlotText(text,x,y,(ImVec2){.x=0, .y=0},0); }
void wrap_ImPlot_PlotToPixels_PlotPoInt(ImVec2* pOut,const ImPlotPoint plt) { ImPlot_PlotToPixels_PlotPoInt(pOut,plt,-1,-1); }
void wrap_ImPlot_PlotToPixels_double(ImVec2* pOut,double x,double y) { ImPlot_PlotToPixels_double(pOut,x,y,-1,-1); }
void wrap_ImPlot_PopColormap() { ImPlot_PopColormap(1); }
void wrap_ImPlot_PopStyleColor() { ImPlot_PopStyleColor(1); }
void wrap_ImPlot_PopStyleVar() { ImPlot_PopStyleVar(1); }
void wrap_ImPlot_PushPlotClipRect() { ImPlot_PushPlotClipRect(0); }
ImPlotItem* wrap_ImPlot_RegisterOrGetItem(const char* label_id,ImPlotItemFlags flags) { return ImPlot_RegisterOrGetItem(label_id,flags,0); }
void wrap_ImPlot_SampleColormap(ImVec4* pOut,float t) { ImPlot_SampleColormap(pOut,t,-1); }
void wrap_ImPlot_SetNextAxesLimits(double x_min,double x_max,double y_min,double y_max) { ImPlot_SetNextAxesLimits(x_min,x_max,y_min,y_max,ImPlotCond_Once); }
void wrap_ImPlot_SetNextAxisLimits(ImAxis axis,double v_min,double v_max) { ImPlot_SetNextAxisLimits(axis,v_min,v_max,ImPlotCond_Once); }
void wrap_ImPlot_SetNextErrorBarStyle() { ImPlot_SetNextErrorBarStyle((ImVec4){.x=0, .y=0, .z=0, .w=-1},-1,-1); }
void wrap_ImPlot_SetNextFillStyle() { ImPlot_SetNextFillStyle((ImVec4){.x=0, .y=0, .z=0, .w=-1},-1); }
void wrap_ImPlot_SetNextLineStyle() { ImPlot_SetNextLineStyle((ImVec4){.x=0, .y=0, .z=0, .w=-1},-1); }
void wrap_ImPlot_SetNextMarkerStyle() { ImPlot_SetNextMarkerStyle(-1,-1,(ImVec4){.x=0, .y=0, .z=0, .w=-1},-1,(ImVec4){.x=0, .y=0, .z=0, .w=-1}); }
void wrap_ImPlot_SetupAxes(const char* x_label,const char* y_label) { ImPlot_SetupAxes(x_label,y_label,0,0); }
void wrap_ImPlot_SetupAxesLimits(double x_min,double x_max,double y_min,double y_max) { ImPlot_SetupAxesLimits(x_min,x_max,y_min,y_max,ImPlotCond_Once); }
void wrap_ImPlot_SetupAxis(ImAxis axis) { ImPlot_SetupAxis(axis,0,0); }
void wrap_ImPlot_SetupAxisFormat_PlotFormatter(ImAxis axis,ImPlotFormatter formatter) { wrap_ImPlot_SetupAxisFormat_PlotFormatterV(axis,formatter,0); }
void wrap_ImPlot_SetupAxisLimits(ImAxis axis,double v_min,double v_max) { ImPlot_SetupAxisLimits(axis,v_min,v_max,ImPlotCond_Once); }
void wrap_ImPlot_SetupAxisScale_PlotTransform(ImAxis axis,ImPlotTransform forward,ImPlotTransform inverse) { wrap_ImPlot_SetupAxisScale_PlotTransformV(axis,forward,inverse,0); }
void wrap_ImPlot_SetupAxisTicks_double(ImAxis axis,double v_min,double v_max,int n_ticks) { ImPlot_SetupAxisTicks_double(axis,v_min,v_max,n_ticks,0,false); }
void wrap_ImPlot_SetupAxisTicks_doublePtr(ImAxis axis,const double* values,int n_ticks) { ImPlot_SetupAxisTicks_doublePtr(axis,values,n_ticks,0,false); }
void wrap_ImPlot_SetupLegend(ImPlotLocation location) { ImPlot_SetupLegend(location,0); }
void wrap_ImPlot_SetupMouseText(ImPlotLocation location) { ImPlot_SetupMouseText(location,0); }
void wrap_ImPlot_ShowAltLegend(const char* title_id) { ImPlot_ShowAltLegend(title_id,true,(ImVec2){.x=0, .y=0},true); }
void wrap_ImPlot_ShowAxisContextMenu(ImPlotAxis* axis,ImPlotAxis* equal_axis) { ImPlot_ShowAxisContextMenu(axis,equal_axis,false); }
bool wrap_ImPlot_ShowDatePicker(const char* id,int* level,ImPlotTime* t) { return ImPlot_ShowDatePicker(id,level,t,0,0); }
void wrap_ImPlot_ShowDemoWindow() { ImPlot_ShowDemoWindow(0); }
void wrap_ImPlot_ShowMetricsWindow() { ImPlot_ShowMetricsWindow(0); }
void wrap_ImPlot_ShowStyleEditor() { ImPlot_ShowStyleEditor(0); }
void wrap_ImPlot_StyleColorsAuto() { ImPlot_StyleColorsAuto(0); }
void wrap_ImPlot_StyleColorsClassic() { ImPlot_StyleColorsClassic(0); }
void wrap_ImPlot_StyleColorsDark() { ImPlot_StyleColorsDark(0); }
void wrap_ImPlot_StyleColorsLight() { ImPlot_StyleColorsLight(0); }
void wrap_ImPlot_TagX_Bool(double x,const ImVec4 col) { ImPlot_TagX_Bool(x,col,false); }
void wrap_ImPlot_TagY_Bool(double y,const ImVec4 col) { ImPlot_TagY_Bool(y,col,false); }
