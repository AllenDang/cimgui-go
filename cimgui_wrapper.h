#pragma once

#include "cimgui/cimgui.h"

#ifdef __cplusplus
extern "C" {
#endif

extern void GetFontTexUvWhitePixel(ImVec2 *pOut);
extern bool IsAnyItemHovered();
extern bool BeginMenuBar();
extern ImGuiStorage *GetStateStorage();
extern void GuiListClipper_Begin(ImGuiListClipper *self, int items_count, float items_height);
extern bool ArrowButton(const char *str_id, ImGuiDir dir);
extern bool IsItemEdited();
extern void GuiStyle_destroy(ImGuiStyle *self);
extern bool InputDouble(const char *label, double *v, double step, double step_fast, const char *format, ImGuiInputTextFlags flags);
extern void GuiIO_AddInputCharacter(ImGuiIO *self, unsigned int c);
extern void DrawList_AddImageRounded(ImDrawList *self, ImTextureID user_texture_id, const ImVec2 p_min, const ImVec2 p_max, const ImVec2 uv_min, const ImVec2 uv_max, ImU32 col, float rounding, ImDrawFlags flags);
extern void GuiIO_AddInputCharactersUTF8(ImGuiIO *self, const char *str);
extern void DrawListSharedData_destroy(ImDrawListSharedData *self);
extern bool BeginPopupContextWindow(const char *str_id, ImGuiPopupFlags popup_flags);
extern void SetWindowFontScale(float scale);
extern bool GuiTextFilter_PassFilter(ImGuiTextFilter *self, const char *text, const char *text_end);
extern void DebugTextEncoding(const char *text);
extern const ImGuiPayload *AcceptDragDropPayload(const char *type, ImGuiDragDropFlags flags);
extern void DrawList_PathBezierCubicCurveTo(ImDrawList *self, const ImVec2 p2, const ImVec2 p3, const ImVec2 p4, int num_segments);
extern void Font_GrowIndex(ImFont *self, int new_size);
extern void EndChildFrame();
extern void EndTooltip();
extern void DrawList_PathLineToMergeDuplicate(ImDrawList *self, const ImVec2 pos);
extern bool FontGlyphRangesBuilder_GetBit(ImFontGlyphRangesBuilder *self, size_t n);
extern void ShowFontSelector(const char *label);
extern void TableSetupScrollFreeze(int cols, int rows);
extern void LogFinish();
extern void FontAtlas_GetTexDataAsRGBA32(ImFontAtlas *self, unsigned char **out_pixels, int *out_width, int *out_height, int *out_bytes_per_pixel);
extern void GuiTextFilter_Build(ImGuiTextFilter *self);
extern ImGuiViewport *GetWindowViewport();
extern void GetCursorScreenPos(ImVec2 *pOut);
extern float GetScrollY();
extern bool InputText(const char *label, char *buf, size_t buf_size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void *user_data);
extern void SetColumnWidth(int column_index, float width);
extern void GetMousePosOnOpeningCurrentPopup(ImVec2 *pOut);
extern bool GuiListClipper_Step(ImGuiListClipper *self);
extern void DestroyPlatformWindows();
extern void GuiWindowClass_destroy(ImGuiWindowClass *self);
extern bool InputFloat3(const char *label, float v[3], const char *format, ImGuiInputTextFlags flags);
extern void EndMainMenuBar();
extern int FontAtlas_AddCustomRectRegular(ImFontAtlas *self, int width, int height);
extern void GuiOnceUponAFrame_destroy(ImGuiOnceUponAFrame *self);
extern void EndGroup();
extern ImFontGlyphRangesBuilder *FontGlyphRangesBuilder_ImFontGlyphRangesBuilder();
extern bool IsMouseHoveringRect(const ImVec2 r_min, const ImVec2 r_max, bool clip);
extern ImFontAtlasCustomRect *FontAtlas_GetCustomRectByIndex(ImFontAtlas *self, int index);
extern bool BeginTabItem(const char *label, bool *p_open, ImGuiTabItemFlags flags);
extern void EndChild();
extern int TableGetColumnIndex();
extern void TreePop();
extern void DrawList_AddDrawCmd(ImDrawList *self);
extern bool IsWindowFocused(ImGuiFocusedFlags flags);
extern void NewFrame();
extern void PopTextWrapPos();
extern void GuiIO_destroy(ImGuiIO *self);
extern void ColorConvertU32ToFloat4(ImVec4 *pOut, ImU32 in);
extern void LogToTTY(int auto_open_depth);
extern void EndDisabled();
extern void DrawList_ChannelsSetCurrent(ImDrawList *self, int n);
extern void DrawList_PathFillConvex(ImDrawList *self, ImU32 col);
extern bool GuiTextBuffer_empty(ImGuiTextBuffer *self);
extern ImFont *FontAtlas_AddFontFromFileTTF(ImFontAtlas *self, const char *filename, float size_pixels, const ImFontConfig *font_cfg, const ImWchar *glyph_ranges);
extern void DrawList_ChannelsMerge(ImDrawList *self);
extern void SetScrollHereY(float center_y_ratio);
extern void GuiStyleMod_destroy(ImGuiStyleMod *self);
extern bool IsItemVisible();
extern bool IsMouseDoubleClicked(ImGuiMouseButton button);
extern void DrawList_PushClipRectFullScreen(ImDrawList *self);
extern void ColorConvertRGBtoHSV(float r, float g, float b, float *out_h, float *out_s, float *out_v);
extern void GuiContextHook_destroy(ImGuiContextHook *self);
extern void GuiTableSettings_destroy(ImGuiTableSettings *self);
extern bool InputInt2(const char *label, int v[2], ImGuiInputTextFlags flags);
extern void PopButtonRepeat();
extern void SetCursorPosY(float local_y);
extern int GuiTextBuffer_size(ImGuiTextBuffer *self);
extern float GetTextLineHeight();
extern ImGuiViewport *FindViewportByPlatformHandle(void *platform_handle);
extern void GuiTableSortSpecs_destroy(ImGuiTableSortSpecs *self);
extern void EndTabBar();
extern bool DragFloat2(const char *label, float v[2], float v_speed, float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern bool DragInt4(const char *label, int v[4], float v_speed, int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern void ShowStyleEditor(ImGuiStyle *ref);
extern void FontAtlas_ClearInputData(ImFontAtlas *self);
extern void Indent(float indent_w);
extern bool SetDragDropPayload(const char *type, const void *data, size_t sz, ImGuiCond cond);
extern bool DragFloat3(const char *label, float v[3], float v_speed, float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern void GetItemRectSize(ImVec2 *pOut);
extern bool IsMouseDragging(ImGuiMouseButton button, float lock_threshold);
extern bool SliderScalar(const char *label, ImGuiDataType data_type, void *p_data, const void *p_min, const void *p_max, const char *format, ImGuiSliderFlags flags);
extern void DrawList_PathStroke(ImDrawList *self, ImU32 col, ImDrawFlags flags, float thickness);
extern void BeginTooltip();
extern void Font_CalcTextSizeA(ImVec2 *pOut, ImFont *self, float size, float max_width, float wrap_width, const char *text_begin, const char *text_end, const char **remaining);
extern bool GuiInputTextCallbackData_HasSelection(ImGuiInputTextCallbackData *self);
extern bool InputFloat2(const char *label, float v[2], const char *format, ImGuiInputTextFlags flags);
extern void GuiStorage_SetInt(ImGuiStorage *self, ImGuiID key, int val);
extern void DrawList_PopClipRect(ImDrawList *self);
extern bool BeginPopup(const char *str_id, ImGuiWindowFlags flags);
extern void PushFont(ImFont *font);
extern void TableSetupColumn(const char *label, ImGuiTableColumnFlags flags, float init_width_or_weight, ImGuiID user_id);
extern bool DragScalar(const char *label, ImGuiDataType data_type, void *p_data, float v_speed, const void *p_min, const void *p_max, const char *format, ImGuiSliderFlags flags);
extern ImFont *FontAtlas_AddFontFromMemoryCompressedTTF(ImFontAtlas *self, const void *compressed_font_data, int compressed_font_size, float size_pixels, const ImFontConfig *font_cfg, const ImWchar *glyph_ranges);
extern void Font_SetGlyphVisible(ImFont *self, ImWchar c, bool visible);
extern void FontAtlas_CalcCustomRectUV(ImFontAtlas *self, const ImFontAtlasCustomRect *rect, ImVec2 *out_uv_min, ImVec2 *out_uv_max);
extern void DrawList_AddBezierCubic(ImDrawList *self, const ImVec2 p1, const ImVec2 p2, const ImVec2 p3, const ImVec2 p4, ImU32 col, float thickness, int num_segments);
extern void DrawList_AddLine(ImDrawList *self, const ImVec2 p1, const ImVec2 p2, ImU32 col, float thickness);
extern void GuiIO_AddMouseViewportEvent(ImGuiIO *self, ImGuiID id);
extern bool IsItemClicked(ImGuiMouseButton mouse_button);
extern void DrawCmd_destroy(ImDrawCmd *self);
extern const char *GetKeyName(ImGuiKey key);
extern void DrawList_ChannelsSplit(ImDrawList *self, int count);
extern bool GuiPayload_IsDelivery(ImGuiPayload *self);
extern void EndDragDropSource();
extern void SetNextWindowContentSize(const ImVec2 size);
extern ImGuiTableColumnFlags TableGetColumnFlags(int column_n);
extern ImGuiViewport *GetMainViewport();
extern void PushAllowKeyboardFocus(bool allow_keyboard_focus);
extern void Vec1_destroy(ImVec1 *self);
extern void GuiContext_destroy(ImGuiContext *self);
extern void GuiInputTextCallbackData_DeleteChars(ImGuiInputTextCallbackData *self, int pos, int bytes_count);
extern ImGuiTableColumnSortSpecs *GuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs();
extern void PopAllowKeyboardFocus();
extern void SetColorEditOptions(ImGuiColorEditFlags flags);
extern bool Button(const char *label, const ImVec2 size);
extern void DrawList_AddCircle(ImDrawList *self, const ImVec2 center, float radius, ImU32 col, int num_segments, float thickness);
extern ImFontAtlas *FontAtlas_ImFontAtlas();
extern float GetCursorPosX();
extern void GetWindowContentRegionMin(ImVec2 *pOut);
extern bool ColorPicker3(const char *label, float col[3], ImGuiColorEditFlags flags);
extern void PushItemWidth(float item_width);
extern void GetMouseDragDelta(ImVec2 *pOut, ImGuiMouseButton button, float lock_threshold);
extern void FontGlyphRangesBuilder_AddRanges(ImFontGlyphRangesBuilder *self, const ImWchar *ranges);
extern void AlignTextToFramePadding();
extern ImDrawData *DrawData_ImDrawData();
extern const ImWchar *FontAtlas_GetGlyphRangesVietnamese(ImFontAtlas *self);
extern void GuiStorage_SetVoidPtr(ImGuiStorage *self, ImGuiID key, void *val);
extern void TableSetColumnEnabled(int column_n, bool v);
extern void SetNextItemOpen(bool is_open, ImGuiCond cond);
extern bool SliderFloat2(const char *label, float v[2], float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern float GuiStorage_GetFloat(ImGuiStorage *self, ImGuiID key, float default_val);
extern bool DragIntRange2(const char *label, int *v_current_min, int *v_current_max, float v_speed, int v_min, int v_max, const char *format, const char *format_max, ImGuiSliderFlags flags);
extern void GuiComboPreviewData_destroy(ImGuiComboPreviewData *self);
extern void PopFont();
extern void DrawList_AddTriangleFilled(ImDrawList *self, const ImVec2 p1, const ImVec2 p2, const ImVec2 p3, ImU32 col);
extern void GuiStyle_ScaleAllSizes(ImGuiStyle *self, float scale_factor);
extern bool ColorEdit3(const char *label, float col[3], ImGuiColorEditFlags flags);
extern void PushClipRect(const ImVec2 clip_rect_min, const ImVec2 clip_rect_max, bool intersect_with_current_clip_rect);
extern const char *Font_CalcWordWrapPositionA(ImFont *self, float scale, const char *text, const char *text_end, float wrap_width);
extern bool BeginPopupContextItem(const char *str_id, ImGuiPopupFlags popup_flags);
extern void LoadIniSettingsFromDisk(const char *ini_filename);
extern void FontAtlas_Clear(ImFontAtlas *self);
extern void GuiViewport_GetCenter(ImVec2 *pOut, ImGuiViewport *self);
extern void GetContentRegionAvail(ImVec2 *pOut);
extern void FontAtlas_destroy(ImFontAtlas *self);
extern void GuiStorage_BuildSortByKey(ImGuiStorage *self);
extern ImGuiWindowClass *GuiWindowClass_ImGuiWindowClass();
extern void Color_HSV(ImColor *pOut, float h, float s, float v, float a);
extern int GetMouseClickedCount(ImGuiMouseButton button);
extern ImFont *FontAtlas_AddFontDefault(ImFontAtlas *self, const ImFontConfig *font_cfg);
extern bool IsKeyDown(ImGuiKey key);
extern bool GuiTextRange_empty(ImGuiTextRange *self);
extern void EndTabItem();
extern void GuiListClipper_ForceDisplayRangeByIndices(ImGuiListClipper *self, int item_min, int item_max);
extern void GuiTabBar_destroy(ImGuiTabBar *self);
extern void GuiTextBuffer_clear(ImGuiTextBuffer *self);
extern void DrawList_AddTriangle(ImDrawList *self, const ImVec2 p1, const ImVec2 p2, const ImVec2 p3, ImU32 col, float thickness);
extern void DrawList_destroy(ImDrawList *self);
extern void CloseCurrentPopup();
extern bool DragFloatRange2(const char *label, float *v_current_min, float *v_current_max, float v_speed, float v_min, float v_max, const char *format, const char *format_max, ImGuiSliderFlags flags);
extern void DrawList_AddPolyline(ImDrawList *self, const ImVec2 *points, int num_points, ImU32 col, ImDrawFlags flags, float thickness);
extern int FontAtlas_AddCustomRectFontGlyph(ImFontAtlas *self, ImFont *font, ImWchar id, int width, int height, float advance_x, const ImVec2 offset);
extern bool BeginListBox(const char *label, const ImVec2 size);
extern void StyleColorsLight(ImGuiStyle *dst);
extern void EndDragDropTarget();
extern void EndTable();
extern bool IsAnyItemActive();
extern void Color_destroy(ImColor *self);
extern ImFont *FontAtlas_AddFontFromMemoryCompressedBase85TTF(ImFontAtlas *self, const char *compressed_font_data_base85, float size_pixels, const ImFontConfig *font_cfg, const ImWchar *glyph_ranges);
extern ImFontAtlasCustomRect *FontAtlasCustomRect_ImFontAtlasCustomRect();
extern bool IsMouseDown(ImGuiMouseButton button);
extern ImFont *FontAtlas_AddFontFromMemoryTTF(ImFontAtlas *self, void *font_data, int font_size, float size_pixels, const ImFontConfig *font_cfg, const ImWchar *glyph_ranges);
extern bool FontAtlas_Build(ImFontAtlas *self);
extern bool SliderFloat3(const char *label, float v[3], float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern void GuiIO_AddInputCharacterUTF16(ImGuiIO *self, ImWchar16 c);
extern void DrawList_AddRectFilled(ImDrawList *self, const ImVec2 p_min, const ImVec2 p_max, ImU32 col, float rounding, ImDrawFlags flags);
extern void GuiListClipperData_destroy(ImGuiListClipperData *self);
extern ImGuiContext *CreateContext(ImFontAtlas *shared_font_atlas);
extern void PopID();
extern ImGuiTableSortSpecs *TableGetSortSpecs();
extern bool BeginMainMenuBar();
extern void DrawListSplitter_ClearFreeMemory(ImDrawListSplitter *self);
extern void DrawList_AddNgon(ImDrawList *self, const ImVec2 center, float radius, ImU32 col, int num_segments, float thickness);
extern void DrawList_PrimUnreserve(ImDrawList *self, int idx_count, int vtx_count);
extern ImGuiIO *GuiIO_ImGuiIO();
extern void GuiInputTextCallbackData_SelectAll(ImGuiInputTextCallbackData *self);
extern void PopStyleVar(int count);
extern void PushTextWrapPos(float wrap_local_pos_x);
extern void SetItemDefaultFocus();
extern bool SliderFloat4(const char *label, float v[4], float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern void DrawList_PathClear(ImDrawList *self);
extern void GetWindowSize(ImVec2 *pOut);
extern void DrawList_PrimReserve(ImDrawList *self, int idx_count, int vtx_count);
extern void GuiIO_ClearInputCharacters(ImGuiIO *self);
extern float GetColumnOffset(int column_index);
extern bool TabItemButton(const char *label, ImGuiTabItemFlags flags);
extern void TableSetBgColor(ImGuiTableBgTarget target, ImU32 color, int column_n);
extern void GuiIO_AddMousePosEvent(ImGuiIO *self, float x, float y);
extern bool BeginTabBar(const char *str_id, ImGuiTabBarFlags flags);
extern float CalcItemWidth();
extern bool IsKeyReleased(ImGuiKey key);
extern void SetNextWindowDockID(ImGuiID dock_id, ImGuiCond cond);
extern void DrawList_AddNgonFilled(ImDrawList *self, const ImVec2 center, float radius, ImU32 col, int num_segments);
extern void FontGlyphRangesBuilder_AddText(ImFontGlyphRangesBuilder *self, const char *text, const char *text_end);
extern void LogButtons();
extern void DrawList_PrimRect(ImDrawList *self, const ImVec2 a, const ImVec2 b, ImU32 col);
extern void DrawList_PrimVtx(ImDrawList *self, const ImVec2 pos, const ImVec2 uv, ImU32 col);
extern void UpdatePlatformWindows();
extern void GuiTableColumnSettings_destroy(ImGuiTableColumnSettings *self);
extern bool DragFloat4(const char *label, float v[4], float v_speed, float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern void Render();
extern void SetNextFrameWantCaptureMouse(bool want_capture_mouse);
extern bool FontAtlas_IsBuilt(ImFontAtlas *self);
extern bool BeginPopupContextVoid(const char *str_id, ImGuiPopupFlags popup_flags);
extern void LogToFile(int auto_open_depth, const char *filename);
extern void GuiStorage_Clear(ImGuiStorage *self);
extern const char *GuiTextBuffer_begin(ImGuiTextBuffer *self);
extern void GuiViewport_GetWorkCenter(ImVec2 *pOut, ImGuiViewport *self);
extern bool InputScalarN(const char *label, ImGuiDataType data_type, void *p_data, int components, const void *p_step, const void *p_step_fast, const char *format, ImGuiInputTextFlags flags);
extern void PopStyleColor(int count);
extern void GuiStoragePair_destroy(ImGuiStoragePair *self);
extern ImGuiViewport *GuiViewport_ImGuiViewport();
extern ImGuiMouseCursor GetMouseCursor();
extern bool InputInt(const char *label, int *v, int step, int step_fast, ImGuiInputTextFlags flags);
extern void DrawListSplitter_destroy(ImDrawListSplitter *self);
extern ImGuiPlatformIO *GuiPlatformIO_ImGuiPlatformIO();
extern bool IsWindowDocked();
extern bool IsAnyMouseDown();
extern void FontAtlasCustomRect_destroy(ImFontAtlasCustomRect *self);
extern bool IsWindowAppearing();
extern const ImWchar *FontAtlas_GetGlyphRangesChineseFull(ImFontAtlas *self);
extern void Vec2_destroy(ImVec2 *self);
extern bool Font_IsGlyphRangeUnused(ImFont *self, unsigned int c_begin, unsigned int c_last);
extern const char *GuiTextBuffer_end(ImGuiTextBuffer *self);
extern bool DebugCheckVersionAndDataLayout(const char *version_str, size_t sz_io, size_t sz_style, size_t sz_vec2, size_t sz_vec4, size_t sz_drawvert, size_t sz_drawidx);
extern bool SliderScalarN(const char *label, ImGuiDataType data_type, void *p_data, int components, const void *p_min, const void *p_max, const char *format, ImGuiSliderFlags flags);
extern void ShowDemoWindow(bool *p_open);
extern void GuiPtrOrIndex_destroy(ImGuiPtrOrIndex *self);
extern void GetCursorStartPos(ImVec2 *pOut);
extern bool IsItemHovered(ImGuiHoveredFlags flags);
extern bool IsItemToggledOpen();
extern void ResetMouseDragDelta(ImGuiMouseButton button);
extern double GetTime();
extern void DrawListSplitter_Merge(ImDrawListSplitter *self, ImDrawList *draw_list);
extern void GuiTextBuffer_append(ImGuiTextBuffer *self, const char *str, const char *str_end);
extern float GetCursorPosY();
extern bool TableNextColumn();
extern void Font_destroy(ImFont *self);
extern void GuiIO_SetKeyEventNativeData(ImGuiIO *self, ImGuiKey key, int native_keycode, int native_scancode, int native_legacy_index);
extern void GuiNextItemData_destroy(ImGuiNextItemData *self);
extern void FontConf_destroy(ImFontConfig *self);
extern void DestroyContext(ImGuiContext *ctx);
extern void DrawList_AddCircleFilled(ImDrawList *self, const ImVec2 center, float radius, ImU32 col, int num_segments);
extern void Bullet();
extern ImDrawList *DrawList_ImDrawList(const ImDrawListSharedData *shared_data);
extern void DrawList_PathArcToFast(ImDrawList *self, const ImVec2 center, float radius, int a_min_of_12, int a_max_of_12);
extern void GuiPlatformMonitor_destroy(ImGuiPlatformMonitor *self);
extern void GuiTextRange_split(ImGuiTextRange *self, char separator, ImVector_ImGuiTextRange *out);
extern void DrawData_Clear(ImDrawData *self);
extern void GuiInputTextCallbackData_ClearSelection(ImGuiInputTextCallbackData *self);
extern void Font_AddGlyph(ImFont *self, const ImFontConfig *src_cfg, ImWchar c, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advance_x);
extern void DrawList_AddImageQuad(ImDrawList *self, ImTextureID user_texture_id, const ImVec2 p1, const ImVec2 p2, const ImVec2 p3, const ImVec2 p4, const ImVec2 uv1, const ImVec2 uv2, const ImVec2 uv3, const ImVec2 uv4, ImU32 col);
extern void SetItemAllowOverlap();
extern bool GuiTextFilter_IsActive(ImGuiTextFilter *self);
extern bool BeginTable(const char *str_id, int column, ImGuiTableFlags flags, const ImVec2 outer_size, float inner_width);
extern void FontAtlas_SetTexID(ImFontAtlas *self, ImTextureID id);
extern void GetCursorPos(ImVec2 *pOut);
extern float GetWindowDpiScale();
extern ImGuiIO *GetIO();
extern ImDrawList *GetWindowDrawList();
extern void GuiIO_ClearInputKeys(ImGuiIO *self);
extern void CalcTextSize(ImVec2 *pOut, const char *text, const char *text_end, bool hide_text_after_double_hash, float wrap_width);
extern float GetScrollMaxX();
extern bool SmallButton(const char *label);
extern bool ColorEdit4(const char *label, float col[4], ImGuiColorEditFlags flags);
extern void DrawListSplitter_SetCurrentChannel(ImDrawListSplitter *self, ImDrawList *draw_list, int channel_idx);
extern void BeginDisabled(bool disabled);
extern void EndMenuBar();
extern float GetTextLineHeightWithSpacing();
extern void DrawData_DeIndexAllBuffers(ImDrawData *self);
extern void GuiViewport_destroy(ImGuiViewport *self);
extern void SetNextWindowSizeConstraints(const ImVec2 size_min, const ImVec2 size_max, ImGuiSizeCallback custom_callback, void *custom_callback_data);
extern void FontAtlas_ClearFonts(ImFontAtlas *self);
extern ImGuiStyle *GuiStyle_ImGuiStyle();
extern float GetScrollMaxY();
extern void GuiListClipper_End(ImGuiListClipper *self);
extern void GuiTableInstanceData_destroy(ImGuiTableInstanceData *self);
extern void GuiTextFilter_destroy(ImGuiTextFilter *self);
extern void FontGlyphRangesBuilder_SetBit(ImFontGlyphRangesBuilder *self, size_t n);
extern int GetColumnIndex();
extern ImFont *GetFont();
extern void OpenPopupOnItemClick(const char *str_id, ImGuiPopupFlags popup_flags);
extern ImGuiListClipper *GuiListClipper_ImGuiListClipper();
extern void Font_RenderText(ImFont *self, ImDrawList *draw_list, float size, const ImVec2 pos, ImU32 col, const ImVec4 clip_rect, const char *text_begin, const char *text_end, float wrap_width, bool cpu_fine_clip);
extern void GuiNavItemData_destroy(ImGuiNavItemData *self);
extern bool BeginMenu(const char *label, bool enabled);
extern bool Checkbox(const char *label, bool *v);
extern const char *GetClipboardText();
extern void ShowStackToolWindow(bool *p_open);
extern void GuiPopupData_destroy(ImGuiPopupData *self);
extern void GuiStorage_SetFloat(ImGuiStorage *self, ImGuiID key, float val);
extern const ImFontGlyph *Font_FindGlyph(ImFont *self, ImWchar c);
extern bool IsWindowHovered(ImGuiHoveredFlags flags);
extern void LogToClipboard(int auto_open_depth);
extern void SetTabItemClosed(const char *tab_or_docked_window_label);
extern bool BeginPopupModal(const char *name, bool *p_open, ImGuiWindowFlags flags);
extern void GetItemRectMax(ImVec2 *pOut);
extern void SetAllocatorFunctions(ImGuiMemAllocFunc alloc_func, ImGuiMemFreeFunc free_func, void *user_data);
extern ImGuiID DockSpace(ImGuiID id, const ImVec2 size, ImGuiDockNodeFlags flags, const ImGuiWindowClass *window_class);
extern const ImWchar *FontAtlas_GetGlyphRangesThai(ImFontAtlas *self);
extern bool IsItemDeactivatedAfterEdit();
extern void DrawList_AddCallback(ImDrawList *self, ImDrawCallback callback, void *callback_data);
extern void FontGlyphRangesBuilder_BuildRanges(ImFontGlyphRangesBuilder *self, ImVector_ImWchar *out_ranges);
extern void GuiOldColumnData_destroy(ImGuiOldColumnData *self);
extern float GetWindowWidth();
extern const char *SaveIniSettingsToMemory(size_t *out_ini_size);
extern ImDrawList *DrawList_CloneOutput(ImDrawList *self);
extern void FontAtlas_ClearTexData(ImFontAtlas *self);
extern void GuiStackLevelInfo_destroy(ImGuiStackLevelInfo *self);
extern bool *GuiStorage_GetBoolRef(ImGuiStorage *self, ImGuiID key, bool default_val);
extern ImFont *FontAtlas_AddFont(ImFontAtlas *self, const ImFontConfig *font_cfg);
extern void End();
extern float GetWindowHeight();
extern void GuiStackSizes_destroy(ImGuiStackSizes *self);
extern float GetFrameHeight();
extern void SetStateStorage(ImGuiStorage *storage);
extern bool TableSetColumnIndex(int column_n);
extern bool GuiPayload_IsPreview(ImGuiPayload *self);
extern void GuiPayload_destroy(ImGuiPayload *self);
extern int *GuiStorage_GetIntRef(ImGuiStorage *self, ImGuiID key, int default_val);
extern ImU32 ColorConvertFloat4ToU32(const ImVec4 in);
extern void Columns(int count, const char *id, bool border);
extern float GetTreeNodeToLabelSpacing();
extern ImGuiID DockSpaceOverViewport(const ImGuiViewport *viewport, ImGuiDockNodeFlags flags, const ImGuiWindowClass *window_class);
extern void SetCurrentContext(ImGuiContext *ctx);
extern void DrawList_PathArcTo(ImDrawList *self, const ImVec2 center, float radius, float a_min, float a_max, int num_segments);
extern void GuiMenuColumns_destroy(ImGuiMenuColumns *self);
extern void BeginGroup();
extern bool IsItemActivated();
extern void DrawList_AddImage(ImDrawList *self, ImTextureID user_texture_id, const ImVec2 p_min, const ImVec2 p_max, const ImVec2 uv_min, const ImVec2 uv_max, ImU32 col);
extern void DrawList_AddRect(ImDrawList *self, const ImVec2 p_min, const ImVec2 p_max, ImU32 col, float rounding, ImDrawFlags flags, float thickness);
extern void GuiListClipper_destroy(ImGuiListClipper *self);
extern bool VSliderInt(const char *label, const ImVec2 size, int *v, int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern void FontGlyphRangesBuilder_AddChar(ImFontGlyphRangesBuilder *self, ImWchar c);
extern const char *GuiTextBuffer_c_str(ImGuiTextBuffer *self);
extern bool GuiPayload_IsDataType(ImGuiPayload *self, const char *type);
extern bool DragInt2(const char *label, int v[2], float v_speed, int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern void DrawData_ScaleClipRects(ImDrawData *self, const ImVec2 fb_scale);
extern void SetCursorScreenPos(const ImVec2 pos);
extern void DrawList_AddQuadFilled(ImDrawList *self, const ImVec2 p1, const ImVec2 p2, const ImVec2 p3, const ImVec2 p4, ImU32 col);
extern void SetClipboardText(const char *text);
extern void StyleColorsClassic(ImGuiStyle *dst);
extern void GuiLastItemData_destroy(ImGuiLastItemData *self);
extern void GuiTextFilter_Clear(ImGuiTextFilter *self);
extern bool BeginDragDropSource(ImGuiDragDropFlags flags);
extern bool DragFloat(const char *label, float *v, float v_speed, float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern void GuiIO_AddFocusEvent(ImGuiIO *self, bool focused);
extern void GuiPlatformIO_destroy(ImGuiPlatformIO *self);
extern void ShowAboutWindow(bool *p_open);
extern bool IsItemDeactivated();
extern bool SliderInt3(const char *label, int v[3], int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern void GuiStorage_SetAllInt(ImGuiStorage *self, int val);
extern ImDrawData *GetDrawData();
extern bool IsAnyItemFocused();
extern ImGuiID GetWindowDockID();
extern void MemFree(void *ptr);
extern void DrawList_AddConvexPolyFilled(ImDrawList *self, const ImVec2 *points, int num_points, ImU32 col);
extern bool BeginCombo(const char *label, const char *preview_value, ImGuiComboFlags flags);
extern int GetColumnsCount();
extern float *GuiStorage_GetFloatRef(ImGuiStorage *self, ImGuiID key, float default_val);
extern ImGuiTextBuffer *GuiTextBuffer_ImGuiTextBuffer();
extern void DrawList_AddBezierQuadratic(ImDrawList *self, const ImVec2 p1, const ImVec2 p2, const ImVec2 p3, ImU32 col, float thickness, int num_segments);
extern bool FontAtlasCustomRect_IsPacked(ImFontAtlasCustomRect *self);
extern bool VSliderFloat(const char *label, const ImVec2 size, float *v, float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern bool SliderInt(const char *label, int *v, int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern void GuiInputEvent_destroy(ImGuiInputEvent *self);
extern void GuiStackTool_destroy(ImGuiStackTool *self);
extern bool IsKeyPressed(ImGuiKey key, bool repeat);
extern void GuiMetricsConf_destroy(ImGuiMetricsConfig *self);
extern void *GuiStorage_GetVoidPtr(ImGuiStorage *self, ImGuiID key);
extern ImGuiContext *GetCurrentContext();
extern bool DragInt(const char *label, int *v, float v_speed, int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern void StyleColorsDark(ImGuiStyle *dst);
extern bool InputTextMultiline(const char *label, char *buf, size_t buf_size, const ImVec2 size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void *user_data);
extern void SetNextWindowBgAlpha(float alpha);
extern const ImWchar *FontAtlas_GetGlyphRangesJapanese(ImFontAtlas *self);
extern void GuiTextRange_destroy(ImGuiTextRange *self);
extern bool ColorPicker4(const char *label, float col[4], ImGuiColorEditFlags flags, const float *ref_col);
extern void TableHeader(const char *label);
extern const ImVec4 *GetStyleColorVec4(ImGuiCol idx);
extern void GuiNextWindowData_destroy(ImGuiNextWindowData *self);
extern ImGuiTableSortSpecs *GuiTableSortSpecs_ImGuiTableSortSpecs();
extern bool Begin(const char *name, bool *p_open, ImGuiWindowFlags flags);
extern void EndMenu();
extern void GuiTextBuffer_reserve(ImGuiTextBuffer *self, int capacity);
extern ImGuiPlatformIO *GetPlatformIO();
extern void DrawList_PushTextureID(ImDrawList *self, ImTextureID texture_id);
extern const char *Font_GetDebugName(ImFont *self);
extern bool ColorButton(const char *desc_id, const ImVec4 col, ImGuiColorEditFlags flags, const ImVec2 size);
extern void ShowMetricsWindow(bool *p_open);
extern void Color_SetHSV(ImColor *self, float h, float s, float v, float a);
extern const ImWchar *FontAtlas_GetGlyphRangesChineseSimplifiedCommon(ImFontAtlas *self);
extern void EndListBox();
extern void GetWindowPos(ImVec2 *pOut);
extern void GuiStorage_SetBool(ImGuiStorage *self, ImGuiID key, bool val);
extern bool IsMouseClicked(ImGuiMouseButton button, bool repeat);
extern bool InputInt3(const char *label, int v[3], ImGuiInputTextFlags flags);
extern void GuiIO_AddMouseWheelEvent(ImGuiIO *self, float wh_x, float wh_y);
extern void NextColumn();
extern bool DragScalarN(const char *label, ImGuiDataType data_type, void *p_data, int components, float v_speed, const void *p_min, const void *p_max, const char *format, ImGuiSliderFlags flags);
extern const char *GetVersion();
extern bool IsWindowCollapsed();
extern void *MemAlloc(size_t size);
extern bool SliderFloat(const char *label, float *v, float v_min, float v_max, const char *format, ImGuiSliderFlags flags);
extern void GetAllocatorFunctions(ImGuiMemAllocFunc *p_alloc_func, ImGuiMemFreeFunc *p_free_func, void **p_user_data);
extern ImGuiStyle *GetStyle();
extern bool InputFloat(const char *label, float *v, float step, float step_fast, const char *format, ImGuiInputTextFlags flags);
extern bool FontAtlas_GetMouseCursorTexData(ImFontAtlas *self, ImGuiMouseCursor cursor, ImVec2 *out_offset, ImVec2 *out_size, ImVec2 out_uv_border[2], ImVec2 out_uv_fill[2]);
extern ImFont *Font_ImFont();
extern void GuiDockContext_destroy(ImGuiDockContext *self);
extern void EndFrame();
extern void ColorConvertHSVtoRGB(float h, float s, float v, float *out_r, float *out_g, float *out_b);
extern void SetNextWindowSize(const ImVec2 size, ImGuiCond cond);
extern void DrawList_PopTextureID(ImDrawList *self);
extern void Vec4_destroy(ImVec4 *self);
extern bool BeginChildFrame(ImGuiID id, const ImVec2 size, ImGuiWindowFlags flags);
extern void **GuiStorage_GetVoidPtrRef(ImGuiStorage *self, ImGuiID key, void *default_val);
extern void Vec2ih_destroy(ImVec2ih *self);
extern void SaveIniSettingsToDisk(const char *ini_filename);
extern void DrawList_GetClipRectMax(ImVec2 *pOut, ImDrawList *self);
extern void FontGlyphRangesBuilder_destroy(ImFontGlyphRangesBuilder *self);
extern bool InputTextWithHint(const char *label, const char *hint, char *buf, size_t buf_size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void *user_data);
extern bool SliderInt4(const char *label, int v[4], int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern void DrawListSplitter_Clear(ImDrawListSplitter *self);
extern const ImWchar *FontAtlas_GetGlyphRangesDefault(ImFontAtlas *self);
extern void GuiSettingsHandler_destroy(ImGuiSettingsHandler *self);
extern void DrawList_AddQuad(ImDrawList *self, const ImVec2 p1, const ImVec2 p2, const ImVec2 p3, const ImVec2 p4, ImU32 col, float thickness);
extern void LoadIniSettingsFromMemory(const char *ini_data, size_t ini_size);
extern bool Font_IsLoaded(ImFont *self);
extern void Font_RenderChar(ImFont *self, ImDrawList *draw_list, float size, const ImVec2 pos, ImU32 col, ImWchar c);
extern void Dummy(const ImVec2 size);
extern const char *GetStyleColorName(ImGuiCol idx);
extern bool InputScalar(const char *label, ImGuiDataType data_type, void *p_data, const void *p_step, const void *p_step_fast, const char *format, ImGuiInputTextFlags flags);
extern void SetCursorPos(const ImVec2 local_pos);
extern void DrawList_PrimWriteVtx(ImDrawList *self, const ImVec2 pos, const ImVec2 uv, ImU32 col);
extern bool IsMousePosValid(const ImVec2 *mouse_pos);
extern void SetKeyboardFocusHere(int offset);
extern void TableHeadersRow();
extern bool InputFloat4(const char *label, float v[4], const char *format, ImGuiInputTextFlags flags);
extern void ShowDebugLogWindow(bool *p_open);
extern bool GuiStorage_GetBool(ImGuiStorage *self, ImGuiID key, bool default_val);
extern void GuiPlatformImeData_destroy(ImGuiPlatformImeData *self);
extern ImGuiPlatformImeData *GuiPlatformImeData_ImGuiPlatformImeData();
extern void GuiTableColumn_destroy(ImGuiTableColumn *self);
extern void Rect_destroy(ImRect *self);
extern void EndPopup();
extern bool IsMouseReleased(ImGuiMouseButton button);
extern ImGuiPlatformMonitor *GuiPlatformMonitor_ImGuiPlatformMonitor();
extern bool InvisibleButton(const char *str_id, const ImVec2 size, ImGuiButtonFlags flags);
extern void DrawList_PrimWriteIdx(ImDrawList *self, ImDrawIdx idx);
extern ImGuiPayload *GuiPayload_ImGuiPayload();
extern float GetScrollX();
extern void DrawList_PathBezierQuadraticCurveTo(ImDrawList *self, const ImVec2 p2, const ImVec2 p3, int num_segments);
extern void Font_AddRemapChar(ImFont *self, ImWchar dst, ImWchar src, bool overwrite_dst);
extern float GetFontSize();
extern void EndCombo();
extern const ImWchar *FontAtlas_GetGlyphRangesKorean(ImFontAtlas *self);
extern void GuiTableTempData_destroy(ImGuiTableTempData *self);
extern bool SliderInt2(const char *label, int v[2], int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern int TableGetRowIndex();
extern void SetCursorPosX(float local_x);
extern void GuiIO_SetAppAcceptingEvents(ImGuiIO *self, bool accepting_events);
extern void RenderPlatformWindowsDefault(void *platform_render_arg, void *renderer_render_arg);
extern void Font_ClearOutputData(ImFont *self);
extern bool GuiTextFilter_Draw(ImGuiTextFilter *self, const char *label, float width);
extern bool BeginDragDropTarget();
extern void SetNextItemWidth(float item_width);
extern float Font_GetCharAdvance(ImFont *self, ImWchar c);
extern int TableGetColumnCount();
extern void TextUnformatted(const char *text, const char *text_end);
extern void GuiWindowSettings_destroy(ImGuiWindowSettings *self);
extern void PopItemWidth();
extern void Spacing();
extern void GuiIO_AddKeyEvent(ImGuiIO *self, ImGuiKey key, bool down);
extern void ProgressBar(float fraction, const ImVec2 size_arg, const char *overlay);
extern void PushButtonRepeat(bool repeat);
extern void SetNextWindowViewport(ImGuiID viewport_id);
extern void SetNextWindowCollapsed(bool collapsed, ImGuiCond cond);
extern void TableNextRow(ImGuiTableRowFlags row_flags, float min_row_height);
extern void DrawList_PathRect(ImDrawList *self, const ImVec2 rect_min, const ImVec2 rect_max, float rounding, ImDrawFlags flags);
extern void DrawList_AddRectFilledMultiColor(ImDrawList *self, const ImVec2 p_min, const ImVec2 p_max, ImU32 col_upr_left, ImU32 col_upr_right, ImU32 col_bot_right, ImU32 col_bot_left);
extern void GetMousePos(ImVec2 *pOut);
extern float GetColumnWidth(int column_index);
extern int GetKeyPressedAmount(ImGuiKey key, float repeat_delay, float rate);
extern void DrawList_PathLineTo(ImDrawList *self, const ImVec2 pos);
extern void FontGlyphRangesBuilder_Clear(ImFontGlyphRangesBuilder *self);
extern void SetNextWindowPos(const ImVec2 pos, ImGuiCond cond, const ImVec2 pivot);
extern void DrawData_destroy(ImDrawData *self);
extern void GuiIO_AddKeyAnalogEvent(ImGuiIO *self, ImGuiKey key, bool down, float v);
extern bool DragInt3(const char *label, int v[3], float v_speed, int v_min, int v_max, const char *format, ImGuiSliderFlags flags);
extern void DrawListSplitter_Split(ImDrawListSplitter *self, ImDrawList *draw_list, int count);
extern void GetItemRectMin(ImVec2 *pOut);
extern void GuiTextBuffer_destroy(ImGuiTextBuffer *self);
extern const ImGuiPayload *GetDragDropPayload();
extern void GetWindowContentRegionMax(ImVec2 *pOut);
extern void PopClipRect();
extern bool ShowStyleSelector(const char *label);
extern void SetNextWindowClass(const ImGuiWindowClass *window_class);
extern float GetFrameHeightWithSpacing();
extern bool IsItemActive();
extern void SetNextFrameWantCaptureKeyboard(bool want_capture_keyboard);
extern ImDrawListSplitter *DrawListSplitter_ImDrawListSplitter();
extern void FontAtlas_GetTexDataAsAlpha8(ImFontAtlas *self, unsigned char **out_pixels, int *out_width, int *out_height, int *out_bytes_per_pixel);
extern void GuiInputTextCallbackData_InsertChars(ImGuiInputTextCallbackData *self, int pos, const char *text, const char *text_end);
extern int GetFrameCount();
extern int GetKeyIndex(ImGuiKey key);
extern const ImFontGlyph *Font_FindGlyphNoFallback(ImFont *self, ImWchar c);
extern void Font_BuildLookupTable(ImFont *self);
extern ImGuiTextFilter *GuiTextFilter_ImGuiTextFilter(const char *default_filter);
extern void ShowUserGuide();
extern ImGuiInputTextCallbackData *GuiInputTextCallbackData_ImGuiInputTextCallbackData();
extern void GuiOldColumns_destroy(ImGuiOldColumns *self);
extern bool InputInt4(const char *label, int v[4], ImGuiInputTextFlags flags);
extern void Separator();
extern void NewLine();
extern void SameLine(float offset_from_start_x, float spacing);
extern void DrawList_GetClipRectMin(ImVec2 *pOut, ImDrawList *self);
extern void DrawList_PushClipRect(ImDrawList *self, const ImVec2 clip_rect_min, const ImVec2 clip_rect_max, bool intersect_with_current_clip_rect);
extern void SetScrollHereX(float center_x_ratio);
extern ImTextureID DrawCmd_GetTexID(ImDrawCmd *self);
extern void DrawList_PrimRectUV(ImDrawList *self, const ImVec2 a, const ImVec2 b, const ImVec2 uv_a, const ImVec2 uv_b, ImU32 col);
extern void GuiInputTextState_destroy(ImGuiInputTextState *self);
extern bool SliderAngle(const char *label, float *v_rad, float v_degrees_min, float v_degrees_max, const char *format, ImGuiSliderFlags flags);
extern ImGuiViewport *FindViewportByID(ImGuiID id);
extern ImDrawCmd *DrawCmd_ImDrawCmd();
extern void GuiPayload_Clear(ImGuiPayload *self);
extern void Unindent(float indent_w);
extern const ImWchar *FontAtlas_GetGlyphRangesCyrillic(ImFontAtlas *self);
extern void SetColumnOffset(int column_index, float offset_x);
extern bool IsItemFocused();
extern bool VSliderScalar(const char *label, const ImVec2 size, ImGuiDataType data_type, void *p_data, const void *p_min, const void *p_max, const char *format, ImGuiSliderFlags flags);
extern ImFontConfig *FontConf_ImFontConfig();
extern void GuiIO_AddMouseButtonEvent(ImGuiIO *self, int button, bool down);
extern void GuiTabItem_destroy(ImGuiTabItem *self);
extern ImDrawListSharedData *GetDrawListSharedData();
extern void GuiInputTextCallbackData_destroy(ImGuiInputTextCallbackData *self);
extern int GuiStorage_GetInt(ImGuiStorage *self, ImGuiID key, int default_val);
extern void GuiTableColumnSortSpecs_destroy(ImGuiTableColumnSortSpecs *self);
extern void SetMouseCursor(ImGuiMouseCursor cursor_type);
extern void DrawList_PrimQuadUV(ImDrawList *self, const ImVec2 a, const ImVec2 b, const ImVec2 c, const ImVec2 d, const ImVec2 uv_a, const ImVec2 uv_b, const ImVec2 uv_c, const ImVec2 uv_d, ImU32 col);
extern ImGuiOnceUponAFrame *GuiOnceUponAFrame_ImGuiOnceUponAFrame();
extern void GetContentRegionMax(ImVec2 *pOut);
extern void SetNextWindowFocus();

#ifdef __cplusplus
}
#endif
