// Code generated by cmd/codegen from https://github.com/AllenDang/cimgui-go.
// DO NOT EDIT.

package imgui

// #include <stdlib.h>
// #include <memory.h>
// #include "extra_types.h"
// #include "cimnodes_wrapper.h"
import "C"
import "unsafe"

type EmulateThreeButtonMouse struct {
	// TODO: contains unsupported fields
	data unsafe.Pointer
}

func (self EmulateThreeButtonMouse) handle() (result *C.EmulateThreeButtonMouse, releaseFn func()) {
	result = (*C.EmulateThreeButtonMouse)(self.data)
	return result, func() {}
}

func (self EmulateThreeButtonMouse) c() (result C.EmulateThreeButtonMouse, fin func()) {
	resultPtr, finFn := self.handle()
	return *resultPtr, finFn
}

func newEmulateThreeButtonMouseFromC(cvalue *C.EmulateThreeButtonMouse) *EmulateThreeButtonMouse {
	result := new(EmulateThreeButtonMouse)
	result.data = unsafe.Pointer(cvalue)
	return result
}

type NodesIO struct {
	FieldEmulateThreeButtonMouse     EmulateThreeButtonMouse
	FieldLinkDetachWithModifierClick LinkDetachWithModifierClick
	FieldMultipleSelectModifier      MultipleSelectModifier
	FieldAltMouseButton              int32
	FieldAutoPanningSpeed            float32
}

func (self NodesIO) handle() (result *C.ImNodesIO, releaseFn func()) {
	result = new(C.ImNodesIO)
	FieldEmulateThreeButtonMouse := self.FieldEmulateThreeButtonMouse
	FieldEmulateThreeButtonMouseArg, FieldEmulateThreeButtonMouseFin := FieldEmulateThreeButtonMouse.c()
	result.EmulateThreeButtonMouse = FieldEmulateThreeButtonMouseArg
	FieldLinkDetachWithModifierClick := self.FieldLinkDetachWithModifierClick
	FieldLinkDetachWithModifierClickArg, FieldLinkDetachWithModifierClickFin := FieldLinkDetachWithModifierClick.c()
	result.LinkDetachWithModifierClick = FieldLinkDetachWithModifierClickArg
	FieldMultipleSelectModifier := self.FieldMultipleSelectModifier
	FieldMultipleSelectModifierArg, FieldMultipleSelectModifierFin := FieldMultipleSelectModifier.c()
	result.MultipleSelectModifier = FieldMultipleSelectModifierArg
	FieldAltMouseButton := self.FieldAltMouseButton

	result.AltMouseButton = C.int(FieldAltMouseButton)
	FieldAutoPanningSpeed := self.FieldAutoPanningSpeed

	result.AutoPanningSpeed = C.float(FieldAutoPanningSpeed)
	releaseFn = func() {
		FieldEmulateThreeButtonMouseFin()
		FieldLinkDetachWithModifierClickFin()
		FieldMultipleSelectModifierFin()
	}
	return result, releaseFn
}

func (self NodesIO) c() (result C.ImNodesIO, fin func()) {
	resultPtr, finFn := self.handle()
	return *resultPtr, finFn
}

func newNodesIOFromC(cvalue *C.ImNodesIO) *NodesIO {
	result := new(NodesIO)
	result.FieldEmulateThreeButtonMouse = *newEmulateThreeButtonMouseFromC(func() *C.EmulateThreeButtonMouse { result := cvalue.EmulateThreeButtonMouse; return &result }())

	result.FieldLinkDetachWithModifierClick = *newLinkDetachWithModifierClickFromC(func() *C.LinkDetachWithModifierClick { result := cvalue.LinkDetachWithModifierClick; return &result }())

	result.FieldMultipleSelectModifier = *newMultipleSelectModifierFromC(func() *C.MultipleSelectModifier { result := cvalue.MultipleSelectModifier; return &result }())

	result.FieldAltMouseButton = int32(cvalue.AltMouseButton)
	result.FieldAutoPanningSpeed = float32(cvalue.AutoPanningSpeed)
	return result
}

type NodesStyle struct {
	// TODO: contains unsupported fields
	data unsafe.Pointer
}

func (self NodesStyle) handle() (result *C.ImNodesStyle, releaseFn func()) {
	result = (*C.ImNodesStyle)(self.data)
	return result, func() {}
}

func (self NodesStyle) c() (result C.ImNodesStyle, fin func()) {
	resultPtr, finFn := self.handle()
	return *resultPtr, finFn
}

func newNodesStyleFromC(cvalue *C.ImNodesStyle) *NodesStyle {
	result := new(NodesStyle)
	result.data = unsafe.Pointer(cvalue)
	return result
}

type LinkDetachWithModifierClick struct {
	// TODO: contains unsupported fields
	data unsafe.Pointer
}

func (self LinkDetachWithModifierClick) handle() (result *C.LinkDetachWithModifierClick, releaseFn func()) {
	result = (*C.LinkDetachWithModifierClick)(self.data)
	return result, func() {}
}

func (self LinkDetachWithModifierClick) c() (result C.LinkDetachWithModifierClick, fin func()) {
	resultPtr, finFn := self.handle()
	return *resultPtr, finFn
}

func newLinkDetachWithModifierClickFromC(cvalue *C.LinkDetachWithModifierClick) *LinkDetachWithModifierClick {
	result := new(LinkDetachWithModifierClick)
	result.data = unsafe.Pointer(cvalue)
	return result
}

type MultipleSelectModifier struct {
	// TODO: contains unsupported fields
	data unsafe.Pointer
}

func (self MultipleSelectModifier) handle() (result *C.MultipleSelectModifier, releaseFn func()) {
	result = (*C.MultipleSelectModifier)(self.data)
	return result, func() {}
}

func (self MultipleSelectModifier) c() (result C.MultipleSelectModifier, fin func()) {
	resultPtr, finFn := self.handle()
	return *resultPtr, finFn
}

func newMultipleSelectModifierFromC(cvalue *C.MultipleSelectModifier) *MultipleSelectModifier {
	result := new(MultipleSelectModifier)
	result.data = unsafe.Pointer(cvalue)
	return result
}
