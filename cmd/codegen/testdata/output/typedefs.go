// Code generated by cmd/codegen from https://github.com/AllenDang/cimgui-go.
// DO NOT EDIT.

package mypkg

// #include <stdlib.h>
// #include <memory.h>
// #include "wrapper.h"
// #include "typedefs.h"

import "C"

type B struct {
	CData *C.B
}

// Handle returns C version of B and its finalizer func.
func (self *B) Handle() (result *C.B, fin func()) {
	return self.CData, func() {}
}

// C is like Handle but returns plain type instead of pointer.
func (self B) C() (C.B, func()) {
	result, fn := self.Handle()
	return *result, fn
}

// NewEmptyB creates B with its 0 value.
func NewEmptyB() *B {
	return &B{CData: new(C.B)}
}

// NewBFromC creates B from its C pointer.
// SRC ~= *C.B
func NewBFromC[SRC any](cvalue SRC) *B {
	return &B{CData: internal.ReinterpretCast[*C.B](cvalue)}
}
