#pragma once

#include "cimplot/cimplot.h"

#ifdef __cplusplus
extern "C" {
#endif

extern void PlotAlignmentData_Destroy(ImPlotAlignmentData* self);
extern void PlotAnnotationCollection_Destroy(ImPlotAnnotationCollection* self);
extern void PlotAxis_Destroy(ImPlotAxis* self);
extern void PlotColormapData_Destroy(ImPlotColormapData* self);
extern void PlotDateTimeSpec_Destroy(ImPlotDateTimeSpec* self);
extern ImPlotInputMap* PlotInputMap_ImPlotInputMap();
extern void PlotInputMap_Destroy(ImPlotInputMap* self);
extern void PlotItemGroup_Destroy(ImPlotItemGroup* self);
extern void PlotLegend_Destroy(ImPlotLegend* self);
extern void PlotNextItemData_Destroy(ImPlotNextItemData* self);
extern void PlotNextPlotData_Destroy(ImPlotNextPlotData* self);
extern void PlotPlot_Destroy(ImPlotPlot* self);
extern void PlotPointError_Destroy(ImPlotPointError* self);
extern ImPlotPoint* PlotPoint_ImPlotPoint_Nil();
extern ImPlotPoint* PlotPoint_ImPlotPoint_Vec2(const ImVec2 p);
extern ImPlotPoint* PlotPoint_ImPlotPoint_double(double _x,double _y);
extern void PlotPoint_Destroy(ImPlotPoint* self);
extern double PlotRange_Clamp(ImPlotRange* self,double value);
extern bool PlotRange_Contains(ImPlotRange* self,double value);
extern ImPlotRange* PlotRange_ImPlotRange_Nil();
extern ImPlotRange* PlotRange_ImPlotRange_double(double _min,double _max);
extern double PlotRange_Size(ImPlotRange* self);
extern void PlotRange_Destroy(ImPlotRange* self);
extern void PlotRect_Clamp_PlotPoInt(ImPlotPoint *pOut,ImPlotRect* self,const ImPlotPoint p);
extern void PlotRect_Clamp_double(ImPlotPoint *pOut,ImPlotRect* self,double x,double y);
extern bool PlotRect_Contains_PlotPoInt(ImPlotRect* self,const ImPlotPoint p);
extern bool PlotRect_Contains_double(ImPlotRect* self,double x,double y);
extern ImPlotRect* PlotRect_ImPlotRect_Nil();
extern ImPlotRect* PlotRect_ImPlotRect_double(double x_min,double x_max,double y_min,double y_max);
extern void PlotRect_Max(ImPlotPoint *pOut,ImPlotRect* self);
extern void PlotRect_Min(ImPlotPoint *pOut,ImPlotRect* self);
extern void PlotRect_Size(ImPlotPoint *pOut,ImPlotRect* self);
extern void PlotRect_Destroy(ImPlotRect* self);
extern ImPlotStyle* PlotStyle_ImPlotStyle();
extern void PlotStyle_Destroy(ImPlotStyle* self);
extern void PlotSubplot_Destroy(ImPlotSubplot* self);
extern void PlotTagCollection_Destroy(ImPlotTagCollection* self);
extern void PlotTick_Destroy(ImPlotTick* self);
extern void PlotTicker_Destroy(ImPlotTicker* self);
extern void PlotTime_Destroy(ImPlotTime* self);
extern ImPlotColormap Plot_AddColormap_U32PtrV(const char* name,const ImU32* cols,int size,bool qual);
extern ImPlotColormap Plot_AddColormap_Vec4PtrV(const char* name,const ImVec4* cols,int size,bool qual);
extern void Plot_Annotation_BoolV(double x,double y,const ImVec4 col,const ImVec2 pix_offset,bool clamp,bool round);
extern void Plot_Annotation_Str(double x,double y,const ImVec4 col,const ImVec2 pix_offset,bool clamp,const char* fmt);
extern bool Plot_BeginAlignedPlotsV(const char* group_id,bool vertical);
extern bool Plot_BeginDragDropSourceAxisV(ImAxis axis,ImGuiDragDropFlags flags);
extern bool Plot_BeginDragDropSourceItemV(const char* label_id,ImGuiDragDropFlags flags);
extern bool Plot_BeginDragDropSourcePlotV(ImGuiDragDropFlags flags);
extern bool Plot_BeginDragDropTargetAxis(ImAxis axis);
extern bool Plot_BeginDragDropTargetLegend();
extern bool Plot_BeginDragDropTargetPlot();
extern bool Plot_BeginLegendPopupV(const char* label_id,ImGuiMouseButton mouse_button);
extern bool Plot_BeginPlotV(const char* title_id,const ImVec2 size,ImPlotFlags flags);
extern bool Plot_BeginSubplotsV(const char* title_id,int rows,int cols,const ImVec2 size,ImPlotSubplotFlags flags,float* row_ratios,float* col_ratios);
extern void Plot_BustColorCacheV(const char* plot_title_id);
extern void Plot_CancelPlotSelection();
extern bool Plot_ColormapButtonV(const char* label,const ImVec2 size,ImPlotColormap cmap);
extern void Plot_ColormapIcon(ImPlotColormap cmap);
extern void Plot_ColormapScaleV(const char* label,double scale_min,double scale_max,const ImVec2 size,const char* format,ImPlotColormapScaleFlags flags,ImPlotColormap cmap);
extern bool Plot_ColormapSliderV(const char* label,float* t,ImVec4* out,const char* format,ImPlotColormap cmap);
extern ImPlotContext* Plot_CreateContext();
extern void Plot_DestroyContextV(ImPlotContext* ctx);
extern bool Plot_DragLineXV(int id,double* x,const ImVec4 col,float thickness,ImPlotDragToolFlags flags);
extern bool Plot_DragLineYV(int id,double* y,const ImVec4 col,float thickness,ImPlotDragToolFlags flags);
extern bool Plot_DragPointV(int id,double* x,double* y,const ImVec4 col,float size,ImPlotDragToolFlags flags);
extern bool Plot_DragRectV(int id,double* x_min,double* y_min,double* x_max,double* y_max,const ImVec4 col,ImPlotDragToolFlags flags);
extern void Plot_EndAlignedPlots();
extern void Plot_EndDragDropSource();
extern void Plot_EndDragDropTarget();
extern void Plot_EndLegendPopup();
extern void Plot_EndPlot();
extern void Plot_EndSubplots();
extern void Plot_GetColormapColorV(ImVec4 *pOut,int idx,ImPlotColormap cmap);
extern int Plot_GetColormapCount();
extern ImPlotColormap Plot_GetColormapIndex(const char* name);
extern const char* Plot_GetColormapName(ImPlotColormap cmap);
extern int Plot_GetColormapSizeV(ImPlotColormap cmap);
extern ImPlotContext* Plot_GetCurrentContext();
extern ImPlotInputMap* Plot_GetInputMap();
extern void Plot_GetLastItemColor(ImVec4 *pOut);
extern const char* Plot_GetMarkerName(ImPlotMarker idx);
extern ImDrawList* Plot_GetPlotDrawList();
extern ImPlotRect Plot_GetPlotLimitsV(ImAxis x_axis,ImAxis y_axis);
extern void Plot_GetPlotMousePosV(ImPlotPoint *pOut,ImAxis x_axis,ImAxis y_axis);
extern void Plot_GetPlotPos(ImVec2 *pOut);
extern ImPlotRect Plot_GetPlotSelectionV(ImAxis x_axis,ImAxis y_axis);
extern void Plot_GetPlotSize(ImVec2 *pOut);
extern ImPlotStyle* Plot_GetStyle();
extern const char* Plot_GetStyleColorName(ImPlotCol idx);
extern void Plot_HideNextItemV(bool hidden,ImPlotCond cond);
extern bool Plot_IsAxisHovered(ImAxis axis);
extern bool Plot_IsLegendEntryHovered(const char* label_id);
extern bool Plot_IsPlotHovered();
extern bool Plot_IsPlotSelected();
extern bool Plot_IsSubplotsHovered();
extern void Plot_ItemIcon_U32(ImU32 col);
extern void Plot_ItemIcon_Vec4(const ImVec4 col);
extern void Plot_MapInputDefaultV(ImPlotInputMap* dst);
extern void Plot_MapInputReverseV(ImPlotInputMap* dst);
extern void Plot_NextColormapColor(ImVec4 *pOut);
extern void Plot_PixelsToPlot_FloatV(ImPlotPoint *pOut,float x,float y,ImAxis x_axis,ImAxis y_axis);
extern void Plot_PixelsToPlot_Vec2V(ImPlotPoint *pOut,const ImVec2 pix,ImAxis x_axis,ImAxis y_axis);
extern void Plot_PlotBarGroups_FloatPtrV(const char* const label_ids[],const float* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_S16PtrV(const char* const label_ids[],const ImS16* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_S32PtrV(const char* const label_ids[],const ImS32* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_S64PtrV(const char* const label_ids[],const ImS64* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_S8PtrV(const char* const label_ids[],const ImS8* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_U16PtrV(const char* const label_ids[],const ImU16* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_U32PtrV(const char* const label_ids[],const ImU32* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_U64PtrV(const char* const label_ids[],const ImU64* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_U8PtrV(const char* const label_ids[],const ImU8* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_doublePtrV(const char* const label_ids[],const double* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarsGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,double bar_size,ImPlotBarsFlags flags);
extern void Plot_PlotBars_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_FloatPtrIntV(const char* label_id,const float* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S16PtrIntV(const char* label_id,const ImS16* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S32PtrIntV(const char* label_id,const ImS32* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S64PtrIntV(const char* label_id,const ImS64* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S8PtrIntV(const char* label_id,const ImS8* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U16PtrIntV(const char* label_id,const ImU16* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U32PtrIntV(const char* label_id,const ImU32* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U64PtrIntV(const char* label_id,const ImU64* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U8PtrIntV(const char* label_id,const ImU8* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_doublePtrIntV(const char* label_id,const double* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotDigitalGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,ImPlotDigitalFlags flags);
extern void Plot_PlotDigital_FloatPtrV(const char* label_id,const float* xs,const float* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_S16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_S32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_S64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_S8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_U16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_U32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_U64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_U8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_doublePtrV(const char* label_id,const double* xs,const double* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDummyV(const char* label_id,ImPlotDummyFlags flags);
extern void Plot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,const float* neg,const float* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_FloatPtrFloatPtrFloatPtrIntV(const char* label_id,const float* xs,const float* ys,const float* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S16PtrS16PtrS16PtrIntV(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S16PtrS16PtrS16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* neg,const ImS16* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S32PtrS32PtrS32PtrIntV(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S32PtrS32PtrS32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* neg,const ImS32* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S64PtrS64PtrS64PtrIntV(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S64PtrS64PtrS64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* neg,const ImS64* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S8PtrS8PtrS8PtrIntV(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S8PtrS8PtrS8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* neg,const ImS8* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U16PtrU16PtrU16PtrIntV(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U16PtrU16PtrU16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* neg,const ImU16* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U32PtrU32PtrU32PtrIntV(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U32PtrU32PtrU32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* neg,const ImU32* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U64PtrU64PtrU64PtrIntV(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U64PtrU64PtrU64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* neg,const ImU64* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U8PtrU8PtrU8PtrIntV(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U8PtrU8PtrU8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* neg,const ImU8* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_doublePtrdoublePtrdoublePtrIntV(const char* label_id,const double* xs,const double* ys,const double* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,const double* neg,const double* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotHeatmap_FloatPtrV(const char* label_id,const float* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_S16PtrV(const char* label_id,const ImS16* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_S32PtrV(const char* label_id,const ImS32* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_S64PtrV(const char* label_id,const ImS64* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_S8PtrV(const char* label_id,const ImS8* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_U16PtrV(const char* label_id,const ImU16* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_U32PtrV(const char* label_id,const ImU32* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_U64PtrV(const char* label_id,const ImU64* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_U8PtrV(const char* label_id,const ImU8* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_doublePtrV(const char* label_id,const double* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern double Plot_PlotHistogram2D_FloatPtrV(const char* label_id,const float* xs,const float* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_S16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_S32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_S64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_S8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_U16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_U32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_U64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_U8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_doublePtrV(const char* label_id,const double* xs,const double* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_FloatPtrV(const char* label_id,const float* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_S16PtrV(const char* label_id,const ImS16* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_S32PtrV(const char* label_id,const ImS32* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_S64PtrV(const char* label_id,const ImS64* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_S8PtrV(const char* label_id,const ImS8* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_U16PtrV(const char* label_id,const ImU16* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_U32PtrV(const char* label_id,const ImU32* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_U64PtrV(const char* label_id,const ImU64* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_U8PtrV(const char* label_id,const ImU8* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_doublePtrV(const char* label_id,const double* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern void Plot_PlotImageV(const char* label_id,ImTextureID user_texture_id,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 tint_col,ImPlotImageFlags flags);
extern void Plot_PlotInfLines_FloatPtrV(const char* label_id,const float* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_S16PtrV(const char* label_id,const ImS16* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_S32PtrV(const char* label_id,const ImS32* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_S64PtrV(const char* label_id,const ImS64* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_S8PtrV(const char* label_id,const ImS8* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_U16PtrV(const char* label_id,const ImU16* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_U32PtrV(const char* label_id,const ImU32* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_U64PtrV(const char* label_id,const ImU64* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_U8PtrV(const char* label_id,const ImU8* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_doublePtrV(const char* label_id,const double* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotLineGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,ImPlotLineFlags flags);
extern void Plot_PlotLine_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_FloatPtrIntV(const char* label_id,const float* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S16PtrIntV(const char* label_id,const ImS16* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S32PtrIntV(const char* label_id,const ImS32* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S64PtrIntV(const char* label_id,const ImS64* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S8PtrIntV(const char* label_id,const ImS8* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U16PtrIntV(const char* label_id,const ImU16* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U32PtrIntV(const char* label_id,const ImU32* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U64PtrIntV(const char* label_id,const ImU64* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U8PtrIntV(const char* label_id,const ImU8* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_doublePtrIntV(const char* label_id,const double* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotPieChart_FloatPtrV(const char* const label_ids[],const float* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_S16PtrV(const char* const label_ids[],const ImS16* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_S32PtrV(const char* const label_ids[],const ImS32* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_S64PtrV(const char* const label_ids[],const ImS64* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_S8PtrV(const char* const label_ids[],const ImS8* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_U16PtrV(const char* const label_ids[],const ImU16* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_U32PtrV(const char* const label_ids[],const ImU32* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_U64PtrV(const char* const label_ids[],const ImU64* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_U8PtrV(const char* const label_ids[],const ImU8* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_doublePtrV(const char* const label_ids[],const double* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotScatterGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,ImPlotScatterFlags flags);
extern void Plot_PlotScatter_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_FloatPtrIntV(const char* label_id,const float* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S16PtrIntV(const char* label_id,const ImS16* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S32PtrIntV(const char* label_id,const ImS32* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S64PtrIntV(const char* label_id,const ImS64* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S8PtrIntV(const char* label_id,const ImS8* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U16PtrIntV(const char* label_id,const ImU16* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U32PtrIntV(const char* label_id,const ImU32* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U64PtrIntV(const char* label_id,const ImU64* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U8PtrIntV(const char* label_id,const ImU8* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_doublePtrIntV(const char* label_id,const double* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotShadedGV(const char* label_id,ImPlotPoint_getter getter1,void* data1,ImPlotPoint_getter getter2,void* data2,int count,ImPlotShadedFlags flags);
extern void Plot_PlotShaded_FloatPtrFloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys1,const float* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_FloatPtrFloatPtrIntV(const char* label_id,const float* xs,const float* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_FloatPtrIntV(const char* label_id,const float* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S16PtrIntV(const char* label_id,const ImS16* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S16PtrS16PtrIntV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S16PtrS16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys1,const ImS16* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S32PtrIntV(const char* label_id,const ImS32* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S32PtrS32PtrIntV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S32PtrS32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys1,const ImS32* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S64PtrIntV(const char* label_id,const ImS64* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S64PtrS64PtrIntV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S64PtrS64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys1,const ImS64* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S8PtrIntV(const char* label_id,const ImS8* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S8PtrS8PtrIntV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S8PtrS8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys1,const ImS8* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U16PtrIntV(const char* label_id,const ImU16* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U16PtrU16PtrIntV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U16PtrU16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys1,const ImU16* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U32PtrIntV(const char* label_id,const ImU32* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U32PtrU32PtrIntV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U32PtrU32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys1,const ImU32* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U64PtrIntV(const char* label_id,const ImU64* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U64PtrU64PtrIntV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U64PtrU64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys1,const ImU64* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U8PtrIntV(const char* label_id,const ImU8* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U8PtrU8PtrIntV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U8PtrU8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys1,const ImU8* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_doublePtrIntV(const char* label_id,const double* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_doublePtrdoublePtrIntV(const char* label_id,const double* xs,const double* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_doublePtrdoublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys1,const double* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotStairsGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,ImPlotStairsFlags flags);
extern void Plot_PlotStairs_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_FloatPtrIntV(const char* label_id,const float* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S16PtrIntV(const char* label_id,const ImS16* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S32PtrIntV(const char* label_id,const ImS32* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S64PtrIntV(const char* label_id,const ImS64* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S8PtrIntV(const char* label_id,const ImS8* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U16PtrIntV(const char* label_id,const ImU16* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U32PtrIntV(const char* label_id,const ImU32* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U64PtrIntV(const char* label_id,const ImU64* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U8PtrIntV(const char* label_id,const ImU8* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_doublePtrIntV(const char* label_id,const double* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStems_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_FloatPtrIntV(const char* label_id,const float* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S16PtrIntV(const char* label_id,const ImS16* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S32PtrIntV(const char* label_id,const ImS32* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S64PtrIntV(const char* label_id,const ImS64* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S8PtrIntV(const char* label_id,const ImS8* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U16PtrIntV(const char* label_id,const ImU16* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U32PtrIntV(const char* label_id,const ImU32* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U64PtrIntV(const char* label_id,const ImU64* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U8PtrIntV(const char* label_id,const ImU8* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_doublePtrIntV(const char* label_id,const double* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotTextV(const char* text,double x,double y,const ImVec2 pix_offset,ImPlotTextFlags flags);
extern void Plot_PlotToPixels_PlotPoIntV(ImVec2 *pOut,const ImPlotPoint plt,ImAxis x_axis,ImAxis y_axis);
extern void Plot_PlotToPixels_doubleV(ImVec2 *pOut,double x,double y,ImAxis x_axis,ImAxis y_axis);
extern void Plot_PopColormapV(int count);
extern void Plot_PopPlotClipRect();
extern void Plot_PopStyleColorV(int count);
extern void Plot_PopStyleVarV(int count);
extern void Plot_PushColormap_PlotColormap(ImPlotColormap cmap);
extern void Plot_PushColormap_Str(const char* name);
extern void Plot_PushPlotClipRectV(float expand);
extern void Plot_PushStyleColor_U32(ImPlotCol idx,ImU32 col);
extern void Plot_PushStyleColor_Vec4(ImPlotCol idx,const ImVec4 col);
extern void Plot_PushStyleVar_Float(ImPlotStyleVar idx,float val);
extern void Plot_PushStyleVar_Int(ImPlotStyleVar idx,int val);
extern void Plot_PushStyleVar_Vec2(ImPlotStyleVar idx,const ImVec2 val);
extern void Plot_SampleColormapV(ImVec4 *pOut,float t,ImPlotColormap cmap);
extern void Plot_SetAxes(ImAxis x_axis,ImAxis y_axis);
extern void Plot_SetAxis(ImAxis axis);
extern void Plot_SetCurrentContext(ImPlotContext* ctx);
extern void Plot_SetImGuiContext(ImGuiContext* ctx);
extern void Plot_SetNextAxesLimitsV(double x_min,double x_max,double y_min,double y_max,ImPlotCond cond);
extern void Plot_SetNextAxesToFit();
extern void Plot_SetNextAxisLimitsV(ImAxis axis,double v_min,double v_max,ImPlotCond cond);
extern void Plot_SetNextAxisLinks(ImAxis axis,double* link_min,double* link_max);
extern void Plot_SetNextAxisToFit(ImAxis axis);
extern void Plot_SetNextErrorBarStyleV(const ImVec4 col,float size,float weight);
extern void Plot_SetNextFillStyleV(const ImVec4 col,float alpha_mod);
extern void Plot_SetNextLineStyleV(const ImVec4 col,float weight);
extern void Plot_SetNextMarkerStyleV(ImPlotMarker marker,float size,const ImVec4 fill,float weight,const ImVec4 outline);
extern void Plot_SetupAxesV(const char* x_label,const char* y_label,ImPlotAxisFlags x_flags,ImPlotAxisFlags y_flags);
extern void Plot_SetupAxesLimitsV(double x_min,double x_max,double y_min,double y_max,ImPlotCond cond);
extern void Plot_SetupAxisV(ImAxis axis,const char* label,ImPlotAxisFlags flags);
extern void Plot_SetupAxisFormat_PlotFormatterV(ImAxis axis,ImPlotFormatter formatter,void* data);
extern void Plot_SetupAxisFormat_Str(ImAxis axis,const char* fmt);
extern void Plot_SetupAxisLimitsV(ImAxis axis,double v_min,double v_max,ImPlotCond cond);
extern void Plot_SetupAxisLimitsConstraints(ImAxis axis,double v_min,double v_max);
extern void Plot_SetupAxisLinks(ImAxis axis,double* link_min,double* link_max);
extern void Plot_SetupAxisScale_PlotScale(ImAxis axis,ImPlotScale scale);
extern void Plot_SetupAxisScale_PlotTransformV(ImAxis axis,ImPlotTransform forward,ImPlotTransform inverse,void* data);
extern void Plot_SetupAxisTicks_doubleV(ImAxis axis,double v_min,double v_max,int n_ticks,const char* const labels[],bool keep_default);
extern void Plot_SetupAxisTicks_doublePtrV(ImAxis axis,const double* values,int n_ticks,const char* const labels[],bool keep_default);
extern void Plot_SetupAxisZoomConstraints(ImAxis axis,double z_min,double z_max);
extern void Plot_SetupFinish();
extern void Plot_SetupLegendV(ImPlotLocation location,ImPlotLegendFlags flags);
extern void Plot_SetupMouseTextV(ImPlotLocation location,ImPlotMouseTextFlags flags);
extern bool Plot_ShowColormapSelector(const char* label);
extern void Plot_ShowDemoWindowV(bool* p_open);
extern bool Plot_ShowInputMapSelector(const char* label);
extern void Plot_ShowMetricsWindowV(bool* p_popen);
extern void Plot_ShowStyleEditorV(ImPlotStyle* ref);
extern bool Plot_ShowStyleSelector(const char* label);
extern void Plot_ShowUserGuide();
extern void Plot_StyleColorsAutoV(ImPlotStyle* dst);
extern void Plot_StyleColorsClassicV(ImPlotStyle* dst);
extern void Plot_StyleColorsDarkV(ImPlotStyle* dst);
extern void Plot_StyleColorsLightV(ImPlotStyle* dst);
extern void Plot_TagX_BoolV(double x,const ImVec4 col,bool round);
extern void Plot_TagX_Str(double x,const ImVec4 col,const char* fmt);
extern void Plot_TagY_BoolV(double y,const ImVec4 col,bool round);
extern void Plot_TagY_Str(double y,const ImVec4 col,const char* fmt);
extern ImPlotColormap Plot_AddColormap_U32Ptr(const char* name,const ImU32* cols,int size);
extern ImPlotColormap Plot_AddColormap_Vec4Ptr(const char* name,const ImVec4* cols,int size);
extern void Plot_Annotation_Bool(double x,double y,const ImVec4 col,const ImVec2 pix_offset,bool clamp);
extern bool Plot_BeginAlignedPlots(const char* group_id);
extern bool Plot_BeginDragDropSourceAxis(ImAxis axis);
extern bool Plot_BeginDragDropSourceItem(const char* label_id);
extern bool Plot_BeginDragDropSourcePlot();
extern bool Plot_BeginLegendPopup(const char* label_id);
extern bool Plot_BeginPlot(const char* title_id);
extern bool Plot_BeginSubplots(const char* title_id,int rows,int cols,const ImVec2 size);
extern void Plot_BustColorCache();
extern bool Plot_ColormapButton(const char* label);
extern void Plot_ColormapScale(const char* label,double scale_min,double scale_max);
extern bool Plot_ColormapSlider(const char* label,float* t);
extern void Plot_DestroyContext();
extern bool Plot_DragLineX(int id,double* x,const ImVec4 col);
extern bool Plot_DragLineY(int id,double* y,const ImVec4 col);
extern bool Plot_DragPoint(int id,double* x,double* y,const ImVec4 col);
extern bool Plot_DragRect(int id,double* x_min,double* y_min,double* x_max,double* y_max,const ImVec4 col);
extern void Plot_GetColormapColor(ImVec4* pOut,int idx);
extern int Plot_GetColormapSize();
extern ImPlotRect Plot_GetPlotLimits();
extern void Plot_GetPlotMousePos(ImPlotPoint* pOut);
extern ImPlotRect Plot_GetPlotSelection();
extern void Plot_HideNextItem();
extern void Plot_MapInputDefault();
extern void Plot_MapInputReverse();
extern void Plot_PixelsToPlot_Float(ImPlotPoint* pOut,float x,float y);
extern void Plot_PixelsToPlot_Vec2(ImPlotPoint* pOut,const ImVec2 pix);
extern void Plot_PlotBarGroups_FloatPtr(const char* const label_ids[],const float* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_S16Ptr(const char* const label_ids[],const ImS16* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_S32Ptr(const char* const label_ids[],const ImS32* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_S64Ptr(const char* const label_ids[],const ImS64* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_S8Ptr(const char* const label_ids[],const ImS8* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_U16Ptr(const char* const label_ids[],const ImU16* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_U32Ptr(const char* const label_ids[],const ImU32* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_U64Ptr(const char* const label_ids[],const ImU64* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_U8Ptr(const char* const label_ids[],const ImU8* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_doublePtr(const char* const label_ids[],const double* values,int item_count,int group_count);
extern void Plot_PlotBarsG(const char* label_id,ImPlotPoint_getter getter,void* data,int count,double bar_size);
extern void Plot_PlotBars_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count,double bar_size);
extern void Plot_PlotBars_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotBars_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotBars_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double bar_size);
extern void Plot_PlotBars_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotBars_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double bar_size);
extern void Plot_PlotBars_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotBars_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double bar_size);
extern void Plot_PlotBars_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotBars_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double bar_size);
extern void Plot_PlotBars_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotBars_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double bar_size);
extern void Plot_PlotBars_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotBars_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double bar_size);
extern void Plot_PlotBars_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotBars_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double bar_size);
extern void Plot_PlotBars_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotBars_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double bar_size);
extern void Plot_PlotBars_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotBars_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count,double bar_size);
extern void Plot_PlotDigitalG(const char* label_id,ImPlotPoint_getter getter,void* data,int count);
extern void Plot_PlotDigital_FloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotDigital_S16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotDigital_S32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotDigital_S64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotDigital_S8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotDigital_U16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotDigital_U32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotDigital_U64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotDigital_U8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotDigital_doublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotDummy(const char* label_id);
extern void Plot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,const float* neg,const float* pos,int count);
extern void Plot_PlotErrorBars_FloatPtrFloatPtrFloatPtrInt(const char* label_id,const float* xs,const float* ys,const float* err,int count);
extern void Plot_PlotErrorBars_S16PtrS16PtrS16PtrInt(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* err,int count);
extern void Plot_PlotErrorBars_S16PtrS16PtrS16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* neg,const ImS16* pos,int count);
extern void Plot_PlotErrorBars_S32PtrS32PtrS32PtrInt(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* err,int count);
extern void Plot_PlotErrorBars_S32PtrS32PtrS32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* neg,const ImS32* pos,int count);
extern void Plot_PlotErrorBars_S64PtrS64PtrS64PtrInt(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* err,int count);
extern void Plot_PlotErrorBars_S64PtrS64PtrS64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* neg,const ImS64* pos,int count);
extern void Plot_PlotErrorBars_S8PtrS8PtrS8PtrInt(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* err,int count);
extern void Plot_PlotErrorBars_S8PtrS8PtrS8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* neg,const ImS8* pos,int count);
extern void Plot_PlotErrorBars_U16PtrU16PtrU16PtrInt(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* err,int count);
extern void Plot_PlotErrorBars_U16PtrU16PtrU16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* neg,const ImU16* pos,int count);
extern void Plot_PlotErrorBars_U32PtrU32PtrU32PtrInt(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* err,int count);
extern void Plot_PlotErrorBars_U32PtrU32PtrU32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* neg,const ImU32* pos,int count);
extern void Plot_PlotErrorBars_U64PtrU64PtrU64PtrInt(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* err,int count);
extern void Plot_PlotErrorBars_U64PtrU64PtrU64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* neg,const ImU64* pos,int count);
extern void Plot_PlotErrorBars_U8PtrU8PtrU8PtrInt(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* err,int count);
extern void Plot_PlotErrorBars_U8PtrU8PtrU8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* neg,const ImU8* pos,int count);
extern void Plot_PlotErrorBars_doublePtrdoublePtrdoublePtrInt(const char* label_id,const double* xs,const double* ys,const double* err,int count);
extern void Plot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,const double* neg,const double* pos,int count);
extern void Plot_PlotHeatmap_FloatPtr(const char* label_id,const float* values,int rows,int cols);
extern void Plot_PlotHeatmap_S16Ptr(const char* label_id,const ImS16* values,int rows,int cols);
extern void Plot_PlotHeatmap_S32Ptr(const char* label_id,const ImS32* values,int rows,int cols);
extern void Plot_PlotHeatmap_S64Ptr(const char* label_id,const ImS64* values,int rows,int cols);
extern void Plot_PlotHeatmap_S8Ptr(const char* label_id,const ImS8* values,int rows,int cols);
extern void Plot_PlotHeatmap_U16Ptr(const char* label_id,const ImU16* values,int rows,int cols);
extern void Plot_PlotHeatmap_U32Ptr(const char* label_id,const ImU32* values,int rows,int cols);
extern void Plot_PlotHeatmap_U64Ptr(const char* label_id,const ImU64* values,int rows,int cols);
extern void Plot_PlotHeatmap_U8Ptr(const char* label_id,const ImU8* values,int rows,int cols);
extern void Plot_PlotHeatmap_doublePtr(const char* label_id,const double* values,int rows,int cols);
extern double Plot_PlotHistogram2D_FloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern double Plot_PlotHistogram2D_S16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern double Plot_PlotHistogram2D_S32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern double Plot_PlotHistogram2D_S64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern double Plot_PlotHistogram2D_S8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern double Plot_PlotHistogram2D_U16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern double Plot_PlotHistogram2D_U32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern double Plot_PlotHistogram2D_U64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern double Plot_PlotHistogram2D_U8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern double Plot_PlotHistogram2D_doublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern double Plot_PlotHistogram_FloatPtr(const char* label_id,const float* values,int count);
extern double Plot_PlotHistogram_S16Ptr(const char* label_id,const ImS16* values,int count);
extern double Plot_PlotHistogram_S32Ptr(const char* label_id,const ImS32* values,int count);
extern double Plot_PlotHistogram_S64Ptr(const char* label_id,const ImS64* values,int count);
extern double Plot_PlotHistogram_S8Ptr(const char* label_id,const ImS8* values,int count);
extern double Plot_PlotHistogram_U16Ptr(const char* label_id,const ImU16* values,int count);
extern double Plot_PlotHistogram_U32Ptr(const char* label_id,const ImU32* values,int count);
extern double Plot_PlotHistogram_U64Ptr(const char* label_id,const ImU64* values,int count);
extern double Plot_PlotHistogram_U8Ptr(const char* label_id,const ImU8* values,int count);
extern double Plot_PlotHistogram_doublePtr(const char* label_id,const double* values,int count);
extern void Plot_PlotImage(const char* label_id,ImTextureID user_texture_id,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max);
extern void Plot_PlotInfLines_FloatPtr(const char* label_id,const float* values,int count);
extern void Plot_PlotInfLines_S16Ptr(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotInfLines_S32Ptr(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotInfLines_S64Ptr(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotInfLines_S8Ptr(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotInfLines_U16Ptr(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotInfLines_U32Ptr(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotInfLines_U64Ptr(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotInfLines_U8Ptr(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotInfLines_doublePtr(const char* label_id,const double* values,int count);
extern void Plot_PlotLineG(const char* label_id,ImPlotPoint_getter getter,void* data,int count);
extern void Plot_PlotLine_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotLine_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotLine_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotLine_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotLine_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotLine_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotLine_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotLine_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotLine_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotLine_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotLine_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotLine_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotLine_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotLine_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotLine_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotLine_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotLine_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotLine_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotLine_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotLine_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotPieChart_FloatPtr(const char* const label_ids[],const float* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_S16Ptr(const char* const label_ids[],const ImS16* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_S32Ptr(const char* const label_ids[],const ImS32* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_S64Ptr(const char* const label_ids[],const ImS64* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_S8Ptr(const char* const label_ids[],const ImS8* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_U16Ptr(const char* const label_ids[],const ImU16* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_U32Ptr(const char* const label_ids[],const ImU32* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_U64Ptr(const char* const label_ids[],const ImU64* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_U8Ptr(const char* const label_ids[],const ImU8* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_doublePtr(const char* const label_ids[],const double* values,int count,double x,double y,double radius);
extern void Plot_PlotScatterG(const char* label_id,ImPlotPoint_getter getter,void* data,int count);
extern void Plot_PlotScatter_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotScatter_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotScatter_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotScatter_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotScatter_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotScatter_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotScatter_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotScatter_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotScatter_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotScatter_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotScatter_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotScatter_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotScatter_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotScatter_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotScatter_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotScatter_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotScatter_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotScatter_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotScatter_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotScatter_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotShadedG(const char* label_id,ImPlotPoint_getter getter1,void* data1,ImPlotPoint_getter getter2,void* data2,int count);
extern void Plot_PlotShaded_FloatPtrFloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys1,const float* ys2,int count);
extern void Plot_PlotShaded_FloatPtrFloatPtrInt(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotShaded_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotShaded_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotShaded_S16PtrS16PtrInt(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotShaded_S16PtrS16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys1,const ImS16* ys2,int count);
extern void Plot_PlotShaded_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotShaded_S32PtrS32PtrInt(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotShaded_S32PtrS32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys1,const ImS32* ys2,int count);
extern void Plot_PlotShaded_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotShaded_S64PtrS64PtrInt(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotShaded_S64PtrS64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys1,const ImS64* ys2,int count);
extern void Plot_PlotShaded_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotShaded_S8PtrS8PtrInt(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotShaded_S8PtrS8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys1,const ImS8* ys2,int count);
extern void Plot_PlotShaded_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotShaded_U16PtrU16PtrInt(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotShaded_U16PtrU16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys1,const ImU16* ys2,int count);
extern void Plot_PlotShaded_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotShaded_U32PtrU32PtrInt(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotShaded_U32PtrU32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys1,const ImU32* ys2,int count);
extern void Plot_PlotShaded_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotShaded_U64PtrU64PtrInt(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotShaded_U64PtrU64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys1,const ImU64* ys2,int count);
extern void Plot_PlotShaded_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotShaded_U8PtrU8PtrInt(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotShaded_U8PtrU8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys1,const ImU8* ys2,int count);
extern void Plot_PlotShaded_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotShaded_doublePtrdoublePtrInt(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotShaded_doublePtrdoublePtrdoublePtr(const char* label_id,const double* xs,const double* ys1,const double* ys2,int count);
extern void Plot_PlotStairsG(const char* label_id,ImPlotPoint_getter getter,void* data,int count);
extern void Plot_PlotStairs_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotStairs_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotStairs_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotStairs_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotStairs_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotStairs_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotStairs_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotStairs_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotStairs_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotStairs_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotStairs_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotStairs_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotStairs_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotStairs_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotStairs_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotStairs_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotStairs_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotStairs_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotStairs_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotStairs_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotStems_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotStems_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotStems_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotStems_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotStems_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotStems_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotStems_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotStems_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotStems_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotStems_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotStems_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotStems_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotStems_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotStems_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotStems_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotStems_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotStems_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotStems_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotStems_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotStems_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotText(const char* text,double x,double y);
extern void Plot_PlotToPixels_PlotPoInt(ImVec2* pOut,const ImPlotPoint plt);
extern void Plot_PlotToPixels_double(ImVec2* pOut,double x,double y);
extern void Plot_PopColormap();
extern void Plot_PopStyleColor();
extern void Plot_PopStyleVar();
extern void Plot_PushPlotClipRect();
extern void Plot_SampleColormap(ImVec4* pOut,float t);
extern void Plot_SetNextAxesLimits(double x_min,double x_max,double y_min,double y_max);
extern void Plot_SetNextAxisLimits(ImAxis axis,double v_min,double v_max);
extern void Plot_SetNextErrorBarStyle();
extern void Plot_SetNextFillStyle();
extern void Plot_SetNextLineStyle();
extern void Plot_SetNextMarkerStyle();
extern void Plot_SetupAxes(const char* x_label,const char* y_label);
extern void Plot_SetupAxesLimits(double x_min,double x_max,double y_min,double y_max);
extern void Plot_SetupAxis(ImAxis axis);
extern void Plot_SetupAxisFormat_PlotFormatter(ImAxis axis,ImPlotFormatter formatter);
extern void Plot_SetupAxisLimits(ImAxis axis,double v_min,double v_max);
extern void Plot_SetupAxisScale_PlotTransform(ImAxis axis,ImPlotTransform forward,ImPlotTransform inverse);
extern void Plot_SetupAxisTicks_double(ImAxis axis,double v_min,double v_max,int n_ticks);
extern void Plot_SetupAxisTicks_doublePtr(ImAxis axis,const double* values,int n_ticks);
extern void Plot_SetupLegend(ImPlotLocation location);
extern void Plot_SetupMouseText(ImPlotLocation location);
extern void Plot_ShowDemoWindow();
extern void Plot_ShowMetricsWindow();
extern void Plot_ShowStyleEditor();
extern void Plot_StyleColorsAuto();
extern void Plot_StyleColorsClassic();
extern void Plot_StyleColorsDark();
extern void Plot_StyleColorsLight();
extern void Plot_TagX_Bool(double x,const ImVec4 col);
extern void Plot_TagY_Bool(double y,const ImVec4 col);

#ifdef __cplusplus
}
#endif
